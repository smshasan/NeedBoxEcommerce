{"version":3,"sources":["constants/userConstants.js","actions/userActions.js","components/layout/Search.js","components/layout/Header.js","components/layout/ImageSlider.js","components/layout/MetaData.js","product/Product.js","constants/productConstants.js","actions/productActions.js","components/Home.js","components/layout/Loader.js","components/SearchPage.js","components/review/ListReviews.js","constants/cartConstants.js","actions/cartActions.js","product/ProductDetails.js","components/cart/Cart.js","components/cart/CheckoutSteps.js","components/cart/Shipping.js","components/cart/ConfirmOrder.js","constants/orderConstants.js","actions/orderActions.js","components/cart/Payment.js","components/cart/OrderSuccess.js","components/Order/ListOrders.js","components/Order/OrderDetails.js","components/user/Login.js","components/user/Register.js","components/user/Profile.js","components/user/UpdateProfile.js","components/user/UpdatePassword.js","components/user/ForgotPassword.js","components/user/NewPassword.js","components/admin/Sidebar.js","components/admin/Dashboard.js","components/admin/ProductsList.js","components/admin/NewProduct.js","components/admin/UpdateProduct.js","components/admin/OrdersList.js","components/admin/ProcessOrder.js","components/admin/UsersList.js","components/admin/UpdateUser.js","components/admin/ProductReviews.js","components/route/ProtectedRoute.js","store.js","reducers/productReducers.js","reducers/userReducers.js","reducers/cartReducers.js","reducers/orderReducers.js","App.js","index.js"],"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAIL","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAIL","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_RESET","UPDATE_PROFILE_FAIL","UPDATE_PASSWORD_REQUEST","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_RESET","UPDATE_PASSWORD_FAIL","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAIL","NEW_PASSWORD_REQUEST","NEW_PASSWORD_SUCCESS","NEW_PASSWORD_FAIL","ALL_USERS_REQUEST","ALL_USERS_SUCCESS","ALL_USERS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_RESET","UPDATE_USER_FAIL","DELETE_USER_REQUEST","DELETE_USER_SUCCESS","DELETE_USER_RESET","DELETE_USER_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","CLEAR_ERRORS","loadUser","dispatch","a","type","axios","get","data","payload","user","response","message","allUsers","users","clearErrors","Search","history","useState","keyword","setKeyword","onSubmit","e","preventDefault","trim","push","className","id","placeholder","onChange","target","value","Header","useDispatch","useSelector","state","auth","loading","cartItems","cart","to","src","alt","render","style","textDecoration","length","avatar","url","name","role","onClick","alert","ImageSlider","Fragment","height","href","MetaData","title","Helmet","product","col","images","_id","width","ratings","numOfReviews","price","ADMIN_PRODUCTS_REQUEST","ADMIN_PRODUCTS_SUCCESS","ADMIN_PRODUCTS_FAIL","ALL_PRODUCTS_REQUEST","ALL_PRODUCTS_SUCCESS","ALL_PRODUCTS_FAIL","NEW_PRODUCT_REQUEST","NEW_PRODUCT_SUCCESS","NEW_PRODUCT_RESET","NEW_PRODUCT_FAIL","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_RESET","DELETE_PRODUCT_FAIL","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_RESET","UPDATE_PRODUCT_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","NEW_REVIEW_REQUEST","NEW_REVIEW_SUCCESS","NEW_REVIEW_RESET","NEW_REVIEW_FAIL","GET_REVIEWS_REQUEST","GET_REVIEWS_SUCCESS","GET_REVIEWS_FAIL","DELETE_REVIEW_REQUEST","DELETE_REVIEW_SUCCESS","DELETE_REVIEW_RESET","DELETE_REVIEW_FAIL","getProducts","currentPage","category","link","console","log","getProductDetails","getAdminProducts","products","getProductReviews","reviews","Home","match","setCurrentPage","error","productsCount","resPerPage","useEffect","count","map","Product","activePage","itemsCountPerPage","totalItemsCount","pageNumber","nextPageText","prevPageText","firstPageText","lastPageText","itemClass","linkClass","Loader","Range","createSliderWithTooltip","Slider","SearchPage","setPrice","setCategory","rating","setRating","filteredProductsCount","params","marks","min","max","defaultValue","tipFormatter","tipProps","placement","visible","cursor","listStyleType","star","ListReviews","class","review","comment","ADD_TO_CART","REMOVE_ITEM_CART","SAVE_SHIPPING_INFO","addItemToCart","quantity","getState","image","stock","localStorage","setItem","JSON","stringify","ProductDetails","setQuantity","setComment","productDetails","newReview","reviewError","success","Carousel","pause","Item","public_id","document","querySelector","valueAsNumber","qty","readOnly","disabled","description","seller","stars","querySelectorAll","showRatings","forEach","index","starValue","classList","add","remove","addEventListener","tabIndex","reviewData","formData","FormData","set","config","headers","put","Cart","removeCartItemHandler","removeItemFromCart","item","newQty","decreaseQty","increaseQty","reduce","acc","Number","toFixed","CheckoutSteps","shipping","confirmOrder","payment","Shipping","countriesList","Object","values","countries","shippingInfo","address","setAddress","city","setCity","postalCode","setPostalCode","phoneNo","setPhoneNo","country","setCountry","htmlFor","required","ConfirmOrder","itemsPrice","shippingPrice","taxPrice","totalPrice","sessionStorage","CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAIL","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","MY_ORDERS_FAIL","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","ALL_ORDERS_FAIL","DELETE_ORDER_RESET","UPDATE_ORDER_REQUEST","UPDATE_ORDER_SUCCESS","UPDATE_ORDER_RESET","UPDATE_ORDER_FAIL","DELETE_ORDER_REQUEST","DELETE_ORDER_SUCCESS","DELETE_ORDER_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","createOrder","order","post","getOrderDetails","allOrders","options","base","fontSize","invalid","color","Payment","stripe","useStripe","elements","useElements","newOrder","orderItems","orderInfo","parse","getItem","paymentData","amount","Math","round","submitHandler","res","clientSecret","client_secret","confirmCardPayment","payment_method","card","getElement","CardNumberElement","billing_details","email","result","paymentIntent","status","paymentInfo","OrderSuccess","ListOrders","myOrders","orders","columns","label","field","sort","rows","numOfItems","orderStatus","String","includes","actions","setOrders","bordered","striped","hover","OrderDetails","orderDetails","shippingDetails","isPaid","Login","location","setEmail","password","setPassword","isAuthenticated","redirect","search","split","login","Register","setUser","setAvatar","avatarPreview","setAvatarPreview","reader","FileReader","onload","readyState","readAsDataURL","files","userData","encType","accept","Profile","createdAt","substring","UpdateProfile","setName","isUpdated","UpdatePassword","oldPassword","setOldPassword","passwords","for","ForgotPassword","forgotPassword","NewPassword","confirmPassword","setConfirmPassword","token","Sidebar","Dashboard","totalAmount","outOfStock","ProductsList","deleteError","isDeleted","deleteProductHandler","delete","deleteProduct","setProducts","NewProduct","setDescription","setStock","setSeller","setImages","imagesPreview","setImagesPreview","newProduct","productData","append","Array","from","file","oldArray","multiple","img","UpdateProduct","oldImages","setOldImages","updateError","productId","OrdersList","deleteOrderHandler","deleteOrder","numofItems","ProcessOrder","setStatus","orderId","updateOrderHandler","orderData","updateOrder","UsersList","deleteUserHandler","deleteUser","setUsers","UpdateUser","setRole","userDetails","userId","ProductReviews","setProductId","productReviews","deleteReviewHandler","deleteReview","setReviews","ProtectedRoute","isAdmin","Component","component","rest","props","reducer","combineReducers","action","idDeleted","isItemExist","find","i","filter","initialState","middlware","thunk","store","createStore","composeWithDevTools","applyMiddleware","App","stripeApiKey","setStripeApiKey","getStripApiKey","path","exact","loadStripe","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.701c7c90.chunk.js","sourcesContent":["export const LOGIN_REQUEST = 'LOGIN_REQUEST'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\r\n\r\nexport const REGISTER_USER_REQUEST = 'REGISTER_USER_REQUEST'\r\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS'\r\nexport const REGISTER_USER_FAIL = 'REGISTER_USER_FAIL'\r\n\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST'\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS'\r\nexport const LOAD_USER_FAIL = 'LOAD_USER_FAIL'\r\n\r\nexport const UPDATE_PROFILE_REQUEST = 'UPDATE_PROFILE_REQUEST'\r\nexport const UPDATE_PROFILE_SUCCESS = 'UPDATE_PROFILE_SUCCESS'\r\nexport const UPDATE_PROFILE_RESET = 'UPDATE_PROFILE_RESET'\r\nexport const UPDATE_PROFILE_FAIL = 'UPDATE_PROFILE_FAIL'\r\n\r\nexport const UPDATE_PASSWORD_REQUEST = 'UPDATE_PASSWORD_REQUEST'\r\nexport const UPDATE_PASSWORD_SUCCESS = 'UPDATE_PASSWORD_SUCCESS'\r\nexport const UPDATE_PASSWORD_RESET = 'UPDATE_PASSWORD_RESET'\r\nexport const UPDATE_PASSWORD_FAIL = 'UPDATE_PASSWORD_FAIL'\r\n\r\nexport const FORGOT_PASSWORD_REQUEST = 'FORGOT_PASSWORD_REQUEST'\r\nexport const FORGOT_PASSWORD_SUCCESS = 'FORGOT_PASSWORD_SUCCESS'\r\nexport const FORGOT_PASSWORD_FAIL = 'FORGOT_PASSWORD_FAIL'\r\n\r\nexport const NEW_PASSWORD_REQUEST = 'NEW_PASSWORD_REQUEST'\r\nexport const NEW_PASSWORD_SUCCESS = 'NEW_PASSWORD_SUCCESS'\r\nexport const NEW_PASSWORD_FAIL = 'NEW_PASSWORD_FAIL'\r\n\r\nexport const ALL_USERS_REQUEST = 'ALL_USERS_REQUEST'\r\nexport const ALL_USERS_SUCCESS = 'ALL_USERS_SUCCESS'\r\nexport const ALL_USERS_FAIL = 'ALL_USERS_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL    = 'USER_DETAILS_FAIL'\r\n\r\nexport const UPDATE_USER_REQUEST = 'UPDATE_USER_REQUEST'\r\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS'\r\nexport const UPDATE_USER_RESET   = 'UPDATE_USER_RESET'\r\nexport const UPDATE_USER_FAIL = 'UPDATE_USER_FAIL'\r\n\r\nexport const DELETE_USER_REQUEST = 'DELETE_USER_REQUEST'\r\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS'\r\nexport const DELETE_USER_RESET   = 'DELETE_USER_RESET'\r\nexport const DELETE_USER_FAIL    = 'DELETE_USER_FAIL'\r\n\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\r\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL'\r\n\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'","import axios  from 'axios'\r\nimport {\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    REGISTER_USER_REQUEST,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAIL,\r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n    LOAD_USER_FAIL,\r\n    UPDATE_PROFILE_REQUEST,\r\n    UPDATE_PROFILE_SUCCESS,\r\n    UPDATE_PROFILE_RESET,\r\n    UPDATE_PROFILE_FAIL,\r\n    UPDATE_PASSWORD_REQUEST,\r\n    UPDATE_PASSWORD_SUCCESS,\r\n    UPDATE_PASSWORD_RESET,\r\n    UPDATE_PASSWORD_FAIL,\r\n    FORGOT_PASSWORD_REQUEST,\r\n    FORGOT_PASSWORD_SUCCESS,\r\n    FORGOT_PASSWORD_FAIL,\r\n    NEW_PASSWORD_REQUEST,\r\n    NEW_PASSWORD_SUCCESS,\r\n    NEW_PASSWORD_FAIL,\r\n    ALL_USERS_REQUEST,\r\n    ALL_USERS_SUCCESS,\r\n    ALL_USERS_FAIL,\r\n    UPDATE_USER_REQUEST,\r\n    UPDATE_USER_SUCCESS,\r\n    UPDATE_USER_RESET,\r\n    UPDATE_USER_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAIL,\r\n    DELETE_USER_REQUEST ,\r\n    DELETE_USER_SUCCESS,\r\n    DELETE_USER_FAIL,\r\n\r\n    CLEAR_ERRORS\r\n\r\n} from '../constants/userConstants'\r\n\r\n// Login\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: LOGIN_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/login', { email, password }, config)\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOGIN_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n// Register\r\nexport const register = (userData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: REGISTER_USER_REQUEST })\r\n        \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/register', userData, config)\r\n        \r\n        dispatch({\r\n            type: REGISTER_USER_SUCCESS,\r\n            payload: data.user\r\n\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: REGISTER_USER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// Load user\r\nexport const loadUser = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: LOAD_USER_REQUEST })\r\n\r\n        const { data } = await axios.get('/api/v1/me')\r\n\r\n        dispatch({\r\n            type: LOAD_USER_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOAD_USER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Update Profile\r\nexport const updateProfile = (userData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_PROFILE_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put('/api/v1/me/update', userData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PROFILE_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// Update password\r\nexport const updatePassword = (passwords) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_PASSWORD_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put('/api/v1/password/update', passwords, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PASSWORD_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PASSWORD_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Forgot password\r\nexport const forgotPassword = (email) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: FORGOT_PASSWORD_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/password/forgot', email, config)\r\n\r\n        dispatch({\r\n            type: FORGOT_PASSWORD_SUCCESS,\r\n            payload: data.message\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: FORGOT_PASSWORD_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// Reset password\r\nexport const resetPassword = (token, passwords) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_PASSWORD_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/password/reset/${token}`, passwords, config)\r\n\r\n        dispatch({\r\n            type: NEW_PASSWORD_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_PASSWORD_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// Logout User\r\nexport const logout = () => async (dispatch) => {\r\n    try {\r\n\r\n         await axios.get('/api/v1/logout')\r\n        \r\n        dispatch({\r\n            type: LOGOUT_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOGOUT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Get all users\r\nexport const allUsers = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ALL_USERS_REQUEST })\r\n\r\n        const { data } = await axios.get('/api/v1/admin/users')\r\n\r\n        dispatch({\r\n            type: ALL_USERS_SUCCESS,\r\n            payload: data.users\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALL_USERS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Update user - ADMIN\r\nexport const updateUser = (id, userData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_USER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/admin/user/${id}`, userData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_USER_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_USER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Get user details - ADMIN\r\nexport const getUserDetails = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: USER_DETAILS_REQUEST })\r\n\r\n\r\n        const { data } = await axios.get(`/api/v1/admin/user/${id}`)\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Delete user - ADMIN\r\nexport const deleteUser = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_USER_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/admin/user/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_USER_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_USER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Clear Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    })\r\n}\r\n","import React, { useState} from 'react'\r\n\r\nconst Search = ({history}) => {\r\n\r\n    const [keyword, setKeyword] = useState('');\r\n\r\n    const searchHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (keyword.trim) {\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={searchHandler}>\r\n            <div className=\"input-group\">\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"search_field\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter Product Name ...\"\r\n                    onChange={ (e) => setKeyword(e.target.value)}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                    <button id=\"search_btn\" className=\"btn\">\r\n                    <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                    </button>\r\n                 </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React, { Fragment } from 'react'\r\nimport { Route, Link } from 'react-router-dom'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n//import { useAlert } from 'react-alert'\r\nimport { logout } from '../../actions/userActions'\r\n//import Loader from '../layout/Loader'\r\n\r\nimport Search from './Search'\r\n\r\nimport '../../App.css'\r\n\r\nconst Header = () => {\r\n   // const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user, loading } = useSelector(state => state.auth)\r\n    const { cartItems } = useSelector(state => state.cart)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n        alert('Logged out successfully.')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <nav className=\"navbar row\">\r\n                <div className=\"col-12 col-md-3\">\r\n                    <div className=\"navbar-brand\">\r\n                        <Link to=\"/\">\r\n                            <img className=\"logoSize\" src=\"/images/needboxbdlogo.png\" alt=\"logo\" />\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\r\n                    <Route render={({ history }) => <Search history={history} />} />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-3 mt-4 mt-md-0 text-center\">\r\n                    <Link to=\"/cart\" style={{ textDecoration: 'none' }} >\r\n                        <span id=\"cart\" className=\"ml-3\">Cart</span>\r\n                        <span className=\"ml-1\" id=\"cart_count\">{cartItems.length}</span>\r\n                    </Link>\r\n\r\n                    {user ? (\r\n                        <div className=\"ml-4 dropdown d-inline\">\r\n                            <Link to=\"#!\" className=\"btn dropdown-toggle text-white mr-4\" type=\"button\" id=\"dropDownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n\r\n                                <figure className=\"avatar avatar-nav\">\r\n                                    <img\r\n                                        src={user.avatar && user.avatar.url}\r\n                                        alt={user && user.name}\r\n                                        className=\"rounded-circle\"\r\n                                    />\r\n                                </figure>\r\n                                <span>{user && user.name}</span>\r\n                            </Link>\r\n\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\r\n\r\n                                {user && user.role === 'admin' && (\r\n                                    <Link className=\"dropdown-item\" to=\"/dashboard\">Dashboard</Link>\r\n                                )}\r\n                                <Link className=\"dropdown-item\" to=\"/orders/me\">Orders</Link>\r\n                                <Link className=\"dropdown-item\" to=\"/me\">Profile</Link>\r\n                                <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\r\n                                    Logout\r\n                                </Link>\r\n\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                    ) : !loading && <Link to=\"/login\" className=\"btn ml-4\" id=\"login_btn\">Login</Link>}\r\n\r\n\r\n                </div>\r\n            </nav>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ImageSlider = () => {\r\n    return (\r\n        <React.Fragment>\r\n            {/* <!-- Image Slider Starts --> */}\r\n            <div className=\"container\">\r\n                <div id=\"amazonImageSlider\" className=\"carousel slide\" data-ride=\"carousel\">\r\n                    <div className=\"carousel-inner\">\r\n                        <div className=\"carousel-item \">\r\n                            <Link to=\"/\"><img src=\"/images/sliderImages/Slider1.jpg\" className=\"d-block w-100\" height=\"300\" alt=\"slide image 01\" /></Link>\r\n                        </div>\r\n                    \r\n                        <div className=\"carousel-item \">\r\n                            <Link to=\"/\"><img src=\"/images/sliderImages/Slider2.jpg\" className=\"d-block w-100\" height=\"300\" alt=\"slide image 02\" /></Link>\r\n                        </div>\r\n                    \r\n                        <div className=\"carousel-item \">\r\n                            <Link to=\"/\"><img src=\"/images/sliderImages/Slider3.jpg\" className=\"d-block w-100\" height=\"300\" alt=\"slide image 03\" /></Link>\r\n                        </div>\r\n                        \r\n                        <div className=\"carousel-item active\">\r\n                            <Link to=\"/\"><img src=\"/images/sliderImages/Slider4.jpg\" className=\"d-block w-100\" height=\"300\" alt=\"slide image 04\" /></Link>\r\n                        </div>\r\n                    \r\n                    </div>\r\n                    <a className=\"carousel-control-prev\" href=\"#amazonImageSlider\" role=\"button\" data-slide=\"prev\">\r\n                    <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                    <span className=\"sr-only\">Previous</span>\r\n                    </a>\r\n                    <a className=\"carousel-control-next\" href=\"#amazonImageSlider\" role=\"button\" data-slide=\"next\">\r\n                    <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                    <span className=\"sr-only\">Next</span>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        {/* <!-- Image Slider Ends --> */}\r\n    </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ImageSlider\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst MetaData = ({title}) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{`${title} - Needboxbd`}</title>\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nexport default MetaData\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst product = ({ product, col }) => {\r\n\r\n    return (\r\n        <div className={`col-sm-12 col-md-6 col-lg-${col} my-3`}>\r\n                        <div className=\"card p-3 rounded\">\r\n                            <img  className=\"card-img-top mx-auto\"  src={product.images[0].url} alt=\"hello first\" />\r\n                            <div className=\"card-body d-flex flex-column\">\r\n                                <h5 className=\"card-title\">\r\n                                    <Link to={`/product/${product._id}`}>{product.name} </Link>\r\n                                </h5>\r\n                                <div className=\"ratings mt-auto\">\r\n                                    <div className=\"rating-outer\">\r\n                                            <div className=\"rating-inner\" style={{width: `${\r\n                                        (product.ratings / 5) * 100}%`}}></div>\r\n                                    </div>\r\n                                    <span id=\"no_of_reviews\">({product.numOfReviews}Reviews)</span>\r\n                                </div>\r\n                                <p className=\"card-text\">৳{product.price}</p>\r\n                                <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">View Details </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n    )\r\n}\r\n\r\nexport default product\r\n","export const ADMIN_PRODUCTS_REQUEST = 'ADMIN_PRODUCTS_REQUEST'\r\nexport const ADMIN_PRODUCTS_SUCCESS = 'ADMIN_PRODUCTS_SUCCESS'\r\nexport const ADMIN_PRODUCTS_FAIL = 'ADMIN_PRODUCTS_FAIL'\r\n\r\nexport const ALL_PRODUCTS_REQUEST = 'ALL_PRODUCTS_REQUEST'\r\nexport const ALL_PRODUCTS_SUCCESS = 'ALL_PRODUCTS_SUCCESS'\r\nexport const ALL_PRODUCTS_FAIL = 'ALL_PRODUCTS_FAIL'\r\n\r\nexport const NEW_PRODUCT_REQUEST = 'NEW_PRODUCT_REQUEST'\r\nexport const NEW_PRODUCT_SUCCESS = 'NEW_PRODUCT_SUCCESS'\r\nexport const NEW_PRODUCT_RESET= 'NEW_PRODUCT_RESET'\r\nexport const NEW_PRODUCT_FAIL = 'NEW_PRODUCT_FAIL'\r\n\r\nexport const DELETE_PRODUCT_REQUEST = 'DELETE_PRODUCT_REQUEST'\r\nexport const DELETE_PRODUCT_SUCCESS = 'DELETE_PRODUCT_SUCCESS'\r\nexport const DELETE_PRODUCT_RESET = 'DELETE_PRODUCT_RESET'\r\nexport const DELETE_PRODUCT_FAIL    = 'DELETE_PRODUCT_FAIL'\r\n\r\nexport const UPDATE_PRODUCT_REQUEST = 'UPDATE_PRODUCT_REQUEST'\r\nexport const UPDATE_PRODUCT_SUCCESS = 'UPDATE_PRODUCT_SUCCESS'\r\nexport const UPDATE_PRODUCT_RESET   = 'UPDATE_PRODUCT_RESET'\r\nexport const UPDATE_PRODUCT_FAIL    = 'UPDATE_PRODUCT_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const NEW_REVIEW_REQUEST = 'NEW_REVIEW_REQUEST'\r\nexport const NEW_REVIEW_SUCCESS = 'NEW_REVIEW_SUCCESS'\r\nexport const NEW_REVIEW_RESET   = 'NEW_REVIEW_RESET'\r\nexport const NEW_REVIEW_FAIL = 'NEW_REVIEW_FAIL'\r\n\r\nexport const GET_REVIEWS_REQUEST = 'GET_REVIEWS_REQUEST'\r\nexport const GET_REVIEWS_SUCCESS = 'GET_REVIEWS_SUCCESS'\r\nexport const GET_REVIEWS_FAIL    = 'GET_REVIEWS_FAIL'\r\n\r\nexport const DELETE_REVIEW_REQUEST = 'DELETE_REVIEW_REQUEST'\r\nexport const DELETE_REVIEW_SUCCESS = 'DELETE_REVIEW_SUCCESS'\r\nexport const DELETE_REVIEW_RESET   = 'DELETE_REVIEW_RESET'\r\nexport const DELETE_REVIEW_FAIL    = 'DELETE_REVIEW_FAIL'\r\n\r\n\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'","import axios from 'axios';\r\n\r\nimport {\r\n    ALL_PRODUCTS_REQUEST,\r\n    ALL_PRODUCTS_SUCCESS,\r\n    ALL_PRODUCTS_FAIL,\r\n    ADMIN_PRODUCTS_REQUEST,\r\n    ADMIN_PRODUCTS_SUCCESS,\r\n    ADMIN_PRODUCTS_FAIL,\r\n    NEW_PRODUCT_REQUEST,\r\n    NEW_PRODUCT_SUCCESS,\r\n    NEW_PRODUCT_FAIL,\r\n    DELETE_PRODUCT_REQUEST,\r\n    DELETE_PRODUCT_SUCCESS,\r\n    DELETE_PRODUCT_RESET,\r\n    DELETE_PRODUCT_FAIL,\r\n    UPDATE_PRODUCT_REQUEST,\r\n    UPDATE_PRODUCT_SUCCESS,\r\n    UPDATE_PRODUCT_RESET  ,\r\n    UPDATE_PRODUCT_FAIL  , \r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    NEW_REVIEW_REQUEST,\r\n    NEW_REVIEW_SUCCESS,\r\n    NEW_REVIEW_FAIL,\r\n    GET_REVIEWS_REQUEST, \r\n    GET_REVIEWS_SUCCESS,\r\n    GET_REVIEWS_FAIL,\r\n    DELETE_REVIEW_REQUEST,\r\n    DELETE_REVIEW_SUCCESS,\r\n    DELETE_REVIEW_RESET,\r\n    DELETE_REVIEW_FAIL,\r\n    CLEAR_ERRORS\r\n\r\n\r\n} from '../constants/productConstants';\r\n\r\nexport const getProducts = (keyword = '', currentPage = 1, price, category, ratings = 0) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ALL_PRODUCTS_REQUEST })\r\n\r\n\r\n        let link = `/api/v1/products?page=${currentPage}`\r\n        if (price) {\r\n            link = `/api/v1/products?&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}`\r\n        } else { link = `/api/v1/products?page=${currentPage}`}\r\n       if (keyword) {\r\n            link = `/api/v1/products?keyword=${keyword}&page=${currentPage}`\r\n        } else { link = `/api/v1/products?page=${currentPage}`}\r\n       if (ratings) {\r\n            link = `/api/v1/products?ratings[gte]=${ratings}&page=${currentPage}`\r\n        } else { link = `/api/v1/products?page=${currentPage}`}\r\n       if (category) {\r\n            link = `/api/v1/products?&category=${category}&page=${currentPage}`\r\n        } else { link = `/api/v1/products?page=${currentPage}`}\r\n         \r\n\r\n       /*if (category) {\r\n            link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`\r\n        }*/\r\n       \r\n\r\n\r\n\r\n        const { data } = await axios.get(link)\r\n        console.log('data',data)\r\n\r\n        dispatch({\r\n            type: ALL_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALL_PRODUCTS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const newProduct = (productData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_PRODUCT_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/v1/admin/product/new`, productData, config)\r\n\r\n        dispatch({\r\n            type: NEW_PRODUCT_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) { \r\n        dispatch({\r\n            type: NEW_PRODUCT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Delete product (Admin)\r\nexport const deleteProduct = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_PRODUCT_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/admin/product/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_PRODUCT_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_PRODUCT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Update Product (ADMIN)\r\nexport const updateProduct = (id, productData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_PRODUCT_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/admin/product/${id}`, productData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getProductDetails = (id) => async (dispatch) => {\r\n     try {\r\n         dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n         const { data } = await axios.get(`/api/v1/product/${id}`)\r\n         dispatch({\r\n             type: PRODUCT_DETAILS_SUCCESS,\r\n             payload: data.product\r\n         })\r\n\r\n     } catch (error) {\r\n         dispatch ({\r\n             type: PRODUCT_DETAILS_FAIL,\r\n             payload: error.response.data.message\r\n         })\r\n     }\r\n}\r\n\r\nexport const newReview = (reviewData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_REVIEW_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/review`, reviewData, config)\r\n\r\n        dispatch({\r\n            type: NEW_REVIEW_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_REVIEW_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getAdminProducts = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ADMIN_PRODUCTS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/admin/products`)\r\n\r\n        dispatch({\r\n            type: ADMIN_PRODUCTS_SUCCESS,\r\n            payload: data.products\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: ADMIN_PRODUCTS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Get product reviews\r\nexport const getProductReviews = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: GET_REVIEWS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/reviews?id=${id}`)\r\n\r\n        dispatch({\r\n            type: GET_REVIEWS_SUCCESS,\r\n            payload: data.reviews\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: GET_REVIEWS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// Delete product review\r\nexport const deleteReview = (id, productId) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_REVIEW_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/reviews?id=${id}&productId=${productId}`)\r\n\r\n        dispatch({\r\n            type: DELETE_REVIEW_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        console.log(error.response);\r\n\r\n        dispatch({\r\n            type: DELETE_REVIEW_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Clear Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    })\r\n}","import React, { Fragment, useState, useEffect } from 'react'\r\nimport Pagination from 'react-js-pagination'\r\nimport Slider from 'rc-slider'\r\nimport 'rc-slider/assets/index.css';\r\nimport ImageSlider from './layout/ImageSlider'\r\n\r\n\r\nimport MetaData from './layout/MetaData'\r\nimport Product from '../product/Product'\r\n\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { getProducts } from '../actions/productActions'\r\n\r\n\r\n\r\nconst Home = ({ match }) => {\r\n\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    \r\n\r\n   \r\n    const dispatch = useDispatch();\r\n\r\n    const { products, error, productsCount, resPerPage } = useSelector(state => state.products)\r\n    \r\n    \r\n\r\n    useEffect(() => {\r\n       \r\n        dispatch(getProducts( currentPage ));\r\n\r\n\r\n    \r\n    }, [dispatch,  error, currentPage])\r\n\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n    let count = productsCount;\r\n    \r\n\r\n    return (\r\n        \r\n                <Fragment>\r\n                    <MetaData title={'Buy Best Products Online'} />\r\n                 \r\n\r\n                    <div className = \"container\">\r\n                        <ImageSlider/>\r\n                    </div>\r\n\r\n                    <section id=\"products\" className=\"container mt-5\">\r\n                    \r\n                        <h1 id=\"products_heading\">Latest Products</h1>\r\n                        <div className = \"row\">\r\n\r\n                        \r\n                                <div className=\"col-6  col-md-12\">\r\n                                    <div className = \"row\">\r\n                                        {products.map((product) => (\r\n\r\n                                            <Product key = {product?._id} product = {product} col = {3} />\r\n\r\n                                        ))}\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                        </div>\r\n                    </section>\r\n\r\n                    {resPerPage <= count && (\r\n                        <div className=\"d-flex justify-content-center mt-5\">\r\n                            <Pagination\r\n                                activePage={currentPage}\r\n                                itemsCountPerPage={resPerPage}\r\n                                totalItemsCount={productsCount}\r\n                                onChange={setCurrentPageNo}\r\n                                nextPageText={'Next'}\r\n                                prevPageText={'Prev'}\r\n                                firstPageText={'First'}\r\n                                lastPageText={'Last'}\r\n                                itemClass=\"page-item\"\r\n                                linkClass=\"page-link\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n\r\n                </Fragment>\r\n    )\r\n}\r\n\r\nexport default Home\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loader\"> </div>\r\n    )\r\n}\r\n\r\nexport default Loader","import React, { Fragment, useState, useEffect } from 'react'\r\nimport Pagination from 'react-js-pagination'\r\nimport Slider from 'rc-slider'\r\nimport 'rc-slider/assets/index.css';\r\nimport Loader from './layout/Loader'\r\n\r\n\r\n\r\nimport MetaData from './layout/MetaData'\r\nimport Product from '../product/Product'\r\n\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { getProducts } from '../actions/productActions'\r\n\r\nconst { createSliderWithTooltip } = Slider;\r\nconst Range = createSliderWithTooltip(Slider.Range)\r\n\r\nconst SearchPage = ({ match }) => {\r\n\r\n     const [currentPage, setCurrentPage] = useState(1)\r\n    const [price, setPrice] = useState([1, 10000])\r\n    const [category, setCategory] = useState('')\r\n    const [rating, setRating] = useState(0)\r\n\r\n    const categories = [\r\n        'Electronics',\r\n        'Cameras',\r\n        'Laptops',\r\n        'Accessories',\r\n        'Headphones',\r\n        'Food',\r\n        \"Books\",\r\n        'Clothes/Shoes',\r\n        'Beauty/Health',\r\n        'Sports',\r\n        'Outdoor',\r\n        'Home',\r\n        'Fruits'\r\n    ]\r\n\r\n    //const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products)\r\n\r\n    const keyword = match.params.keyword\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            return alert.error(error)\r\n        }\r\n\r\n        dispatch(getProducts(keyword, currentPage, price, category, rating));\r\n\r\n\r\n    }, [dispatch,  error, keyword, currentPage, price, category, rating])\r\n\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n    let count = productsCount;\r\n    if (keyword) {\r\n        count = filteredProductsCount\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n          \r\n                <Fragment>\r\n                    <MetaData title={'Buy Best Products Online'} />\r\n\r\n                   \r\n                    <section id=\"products\" className=\"container mt-5\">\r\n                        <h1 id=\"products_heading\" >Popular Products</h1>\r\n\r\n                        <div className=\"row\" mt-20 >\r\n                            \r\n                            {keyword ? (\r\n                                <Fragment>\r\n                                    <div className=\"col-6 col-md-3 mt-5 mb-5\">\r\n                                        <div className=\"px-5\">\r\n                                            <Range\r\n                                                marks={{\r\n                                                    1: `৳1`,\r\n                                                    10000: `৳10000`\r\n                                                }}\r\n                                                min={1}\r\n                                                max={10000}\r\n                                                defaultValue={[1, 10000]}\r\n                                                tipFormatter={value => `৳${value}`}\r\n                                                tipProps={{\r\n                                                    placement: \"top\",\r\n                                                    visible: true\r\n                                                }}\r\n                                                value={price}\r\n                                                onChange={price => setPrice(price)}\r\n                                            />\r\n\r\n                                            <hr className=\"my-5\" />\r\n\r\n                                            <div className=\"mt-5\">\r\n                                                <h4 className=\"mb-3\">\r\n                                                    Categories\r\n                                                </h4>\r\n\r\n                                                <ul className=\"pl-0\">\r\n                                                    {categories.map(category => (\r\n                                                        <li\r\n                                                            style={{\r\n                                                                cursor: 'pointer',\r\n                                                                listStyleType: 'none'\r\n                                                            }}\r\n                                                            key={category}\r\n                                                            onClick={() => setCategory(category)}\r\n                                                        >\r\n                                                            {category}\r\n                                                        </li>\r\n                                                    ))}\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                            <hr className=\"my-3\" />\r\n\r\n                                            <div className=\"mt-5\">\r\n                                                <h4 className=\"mb-3\">\r\n                                                    Ratings\r\n                                                </h4>\r\n\r\n                                                <ul className=\"pl-0\">\r\n                                                    {[5, 4, 3, 2, 1].map(star => (\r\n                                                        <li\r\n                                                            style={{\r\n                                                                cursor: 'pointer',\r\n                                                                listStyleType: 'none'\r\n                                                            }}\r\n                                                            key={star}\r\n                                                            onClick={() => setRating(star)}\r\n                                                        >\r\n                                                            <div className=\"rating-outer\">\r\n                                                                <div className=\"rating-inner\"\r\n                                                                    style={{\r\n                                                                        width: `${star * 20}%`\r\n                                                                    }}\r\n                                                                >\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </li>\r\n                                                    ))}\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-md-9\">\r\n                                        <div className=\"row\">\r\n                                            {products.map(product => (\r\n                                                <Product key={product._id} product={product} col={4} />\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                </Fragment>\r\n                            ) : (\r\n                                    products.map(product => (\r\n                                        <Product key={product._id} product={product} col={3} />\r\n                                    ))\r\n                            )}\r\n\r\n                        </div>\r\n                    </section>\r\n\r\n                   \r\n                </Fragment>\r\n                 \r\n                    {resPerPage <= count && (\r\n                        <div className=\"d-flex justify-content-center mt-5\">\r\n                            <Pagination\r\n                                activePage={currentPage}\r\n                                itemsCountPerPage={resPerPage}\r\n                                totalItemsCount={productsCount}\r\n                                onChange={setCurrentPageNo}\r\n                                nextPageText={'Next'}\r\n                                prevPageText={'Prev'}\r\n                                firstPageText={'First'}\r\n                                lastPageText={'Last'}\r\n                                itemClass=\"page-item\"\r\n                                linkClass=\"page-link\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n\r\n                \r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default SearchPage","import React from 'react'\r\n\r\nconst ListReviews = ({ reviews }) => {\r\n    return (\r\n        <div class=\"reviews w-75\">\r\n            <h3>Other's Reviews:</h3>\r\n            <hr />\r\n            {reviews && reviews.map(review => (\r\n                <div key={review._id} class=\"review-card my-3\">\r\n                    <div class=\"rating-outer\">\r\n                        <div class=\"rating-inner\" style={{ width: `${(review.rating / 5) * 100}%` }}></div>\r\n                    </div>\r\n                    <p class=\"review_user\">by {review.name}</p>\r\n                    <p class=\"review_comment\">{review.comment}</p>\r\n\r\n                    <hr />\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListReviews","export const ADD_TO_CART = 'ADD_TO_CART'\r\nexport const REMOVE_ITEM_CART = 'REMOVE_ITEM_CART'\r\nexport const SAVE_SHIPPING_INFO = 'SAVE_SHIPPING_INFO'","import axios from 'axios'\r\nimport { ADD_TO_CART, REMOVE_ITEM_CART, SAVE_SHIPPING_INFO } from '../constants/cartConstants'\r\n\r\nexport const addItemToCart = (id, quantity) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/v1/product/${id}`)\r\n\r\n    dispatch({\r\n        type: ADD_TO_CART,\r\n        payload: {\r\n            product: data.product._id,\r\n            name: data.product.name,\r\n            price: data.product.price,\r\n            image: data.product.images[0].url,\r\n            stock: data.product.stock,\r\n            quantity\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeItemFromCart = (id) => async (dispatch, getState) => {\r\n\r\n    dispatch({\r\n        type: REMOVE_ITEM_CART,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n}\r\n\r\nexport const saveShippingInfo = (data) => async (dispatch) => {\r\n\r\n    dispatch({\r\n        type: SAVE_SHIPPING_INFO,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('shippingInfo', JSON.stringify(data))\r\n\r\n}","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Carousel } from 'react-bootstrap'\r\n\r\nimport Loader from '../components/layout/Loader'\r\nimport MetaData from '../components/layout/MetaData'\r\nimport ListReviews from '../components/review/ListReviews'\r\n\r\n//import { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProductDetails, newReview, clearErrors } from '../actions/productActions'\r\nimport { addItemToCart } from '../actions/cartActions'\r\nimport { NEW_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nconst ProductDetails = ({ match }) => {\r\n\r\n    const [quantity, setQuantity] = useState(1)\r\n    const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    //const alert = useAlert();\r\n\r\n    const { loading, error, product } = useSelector(state => state.productDetails)\r\n    const { user } = useSelector(state => state.auth)\r\n    const { error: reviewError, success } = useSelector(state => state.newReview)\r\n\r\n    useEffect(() => {\r\n        dispatch(getProductDetails(match.params.id))\r\n\r\n        if (error) {\r\n            alert(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (reviewError) {\r\n            alert(reviewError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (success) {\r\n            alert('Reivew posted successfully')\r\n            dispatch({ type: NEW_REVIEW_RESET })\r\n        }\r\n\r\n    }, [dispatch,  error, reviewError, match.params.id, success])\r\n\r\n    const addToCart = () => {\r\n        dispatch(addItemToCart(match.params.id, quantity));\r\n        alert.success('Item Added to Cart')\r\n    }\r\n\r\n    const increaseQty = () => {\r\n        const count = document.querySelector('.count')\r\n\r\n        if (count.valueAsNumber >= product.stock) return;\r\n\r\n        const qty = count.valueAsNumber + 1;\r\n        setQuantity(qty)\r\n    }\r\n\r\n    const decreaseQty = () => {\r\n\r\n        const count = document.querySelector('.count')\r\n\r\n        if (count.valueAsNumber <= 1) return;\r\n\r\n        const qty = count.valueAsNumber - 1;\r\n        setQuantity(qty)\r\n\r\n    }\r\n\r\n    function setUserRatings() {\r\n        const stars = document.querySelectorAll('.star');\r\n\r\n        stars.forEach((star, index) => {\r\n            star.starValue = index + 1;\r\n\r\n            ['click', 'mouseover', 'mouseout'].forEach(function (e) {\r\n                star.addEventListener(e, showRatings);\r\n            })\r\n        })\r\n\r\n        function showRatings(e) {\r\n            stars.forEach((star, index) => {\r\n                if (e.type === 'click') {\r\n                    if (index < this.starValue) {\r\n                        star.classList.add('orange');\r\n\r\n                        setRating(this.starValue)\r\n                    } else {\r\n                        star.classList.remove('orange')\r\n                    }\r\n                }\r\n\r\n                if (e.type === 'mouseover') {\r\n                    if (index < this.starValue) {\r\n                        star.classList.add('yellow');\r\n                    } else {\r\n                        star.classList.remove('yellow')\r\n                    }\r\n                }\r\n\r\n                if (e.type === 'mouseout') {\r\n                    star.classList.remove('yellow')\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const reviewHandler = () => {\r\n        const formData = new FormData();\r\n\r\n        formData.set('rating', rating);\r\n        formData.set('comment', comment);\r\n        formData.set('productId', match.params.id);\r\n\r\n        dispatch(newReview(formData));\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n           \r\n                <Fragment>\r\n                    <MetaData title={product.name} />\r\n                    <div className=\"row d-flex justify-content-around\">\r\n                        <div className=\"col-12 col-lg-5 img-fluid\" id=\"product_image\">\r\n                            <Carousel pause='hover'>\r\n                                {product.images && product.images.map(image => (\r\n                                    <Carousel.Item key={image.public_id}>\r\n                                        <img className=\"d-block w-100\" src={image.url} alt={product.title} />\r\n                                    </Carousel.Item>\r\n                                ))}\r\n                            </Carousel>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-lg-5 mt-5\">\r\n                        <h3>{product.name}</h3>\r\n                        <p>{product.category}</p>\r\n                            <p id=\"product_id\">Product # {product._id}</p>\r\n\r\n                            <hr />\r\n\r\n                            <div className=\"rating-outer\">\r\n                                <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100}%` }}></div>\r\n                            </div>\r\n                            <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\r\n\r\n                            <hr />\r\n\r\n                            <p id=\"product_price\">৳{product.price}</p>\r\n                            <div className=\"stockCounter d-inline\">\r\n                                <span className=\"btn btn-danger minus\" onClick={decreaseQty}>-</span>\r\n\r\n                                <input type=\"number\" className=\"form-control count d-inline\" value={quantity} readOnly />\r\n\r\n                                <span className=\"btn btn-primary plus\" onClick={increaseQty}>+</span>\r\n                            </div>\r\n                            <button type=\"button\" id=\"cart_btn\" className=\"btn btn-primary d-inline ml-4\" disabled={product.stock === 0} onClick={addToCart}>Add to Cart</button>\r\n\r\n                            <hr />\r\n\r\n                            <p>Status: <span id=\"stock_status\" className={product.stock > 0 ? 'greenColor' : 'redColor'} >{product.stock > 0 ? 'In Stock' : 'Out of Stock'}</span></p>\r\n\r\n                            <hr />\r\n\r\n                            <h4 className=\"mt-2\">Description:</h4>\r\n                            <p>{product.description}</p>\r\n                            <hr />\r\n                            <p id=\"product_seller mb-3\">Sold by: <strong>{product.seller}</strong></p>\r\n\r\n                            {user ? <button id=\"review_btn\" type=\"button\" className=\"btn btn-primary mt-4\" data-toggle=\"modal\" data-target=\"#ratingModal\" onClick={setUserRatings}>\r\n                                Submit Your Review\r\n                            </button>\r\n                                :\r\n                                <div className=\"alert alert-danger mt-5\" type='alert'>Login to post your review.</div>\r\n                            }\r\n\r\n\r\n                            <div className=\"row mt-2 mb-5\">\r\n                                <div className=\"rating w-50\">\r\n\r\n                                    <div className=\"modal fade\" id=\"ratingModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"ratingModalLabel\" aria-hidden=\"true\">\r\n                                        <div className=\"modal-dialog\" role=\"document\">\r\n                                            <div className=\"modal-content\">\r\n                                                <div className=\"modal-header\">\r\n                                                    <h5 className=\"modal-title\" id=\"ratingModalLabel\">Submit Review</h5>\r\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                                        <span aria-hidden=\"true\">&times;</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                                <div className=\"modal-body\">\r\n\r\n                                                    <ul className=\"stars\" >\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                    </ul>\r\n\r\n                                                    <textarea\r\n                                                        name=\"review\"\r\n                                                        id=\"review\" className=\"form-control mt-3\"\r\n                                                        value={comment}\r\n                                                        onChange={(e) => setComment(e.target.value)}\r\n                                                    >\r\n\r\n                                                    </textarea>\r\n\r\n                                                    <button className=\"btn my-3 float-right review-btn px-4 text-white\" onClick={reviewHandler} data-dismiss=\"modal\" aria-label=\"Close\">Submit</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {product.reviews && product.reviews.length > 0 && (\r\n                        <ListReviews reviews={product.reviews} />\r\n                    )}\r\n\r\n                </Fragment>\r\n            \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProductDetails","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addItemToCart, removeItemFromCart } from '../../actions/cartActions'\r\n\r\nconst Cart = ({ history }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { cartItems } = useSelector(state => state.cart)\r\n\r\n    const removeCartItemHandler = (id) => {\r\n        dispatch(removeItemFromCart(id))\r\n    }\r\n\r\n    const increaseQty = (id, quantity, stock) => {\r\n        const newQty = quantity + 1;\r\n\r\n        if (newQty > stock) return;\r\n\r\n        dispatch(addItemToCart(id, newQty))\r\n    }\r\n\r\n    const decreaseQty = (id, quantity) => {\r\n\r\n        const newQty = quantity - 1;\r\n\r\n        if (newQty <= 0) return;\r\n\r\n        dispatch(addItemToCart(id, newQty))\r\n\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Your Cart'} />\r\n            {cartItems.length === 0 ? <h2 className=\"mt-5\">Your Cart is Empty</h2> : (\r\n                <Fragment>\r\n                    <h2 className=\"mt-5\">Your Cart: <b>{cartItems.length} items</b></h2>\r\n\r\n                    <div className=\"row d-flex justify-content-between\">\r\n                        <div className=\"col-12 col-lg-8\">\r\n\r\n                            {cartItems.map(item => (\r\n                                <Fragment>\r\n                                    <hr />\r\n\r\n                                    <div className=\"cart-item\" key={item.product}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-4 col-lg-3\">\r\n                                                <img src={item.image} alt={item.name} height=\"90\" width=\"115\" />\r\n                                            </div>\r\n\r\n                                            <div className=\"col-5 col-lg-3\">\r\n                                                <Link to={`/products/${item.product}`}>{item.name}</Link>\r\n                                            </div>\r\n\r\n\r\n                                            <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                                                <p id=\"card_item_price\">${item.price}</p>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                                                <div className=\"stockCounter d-inline\">\r\n                                                    <span className=\"btn btn-danger minus\" onClick={() => decreaseQty(item.product, item.quantity)}>-</span>\r\n\r\n                                                    <input type=\"number\" className=\"form-control count d-inline\" value={item.quantity} readOnly />\r\n\r\n                                                    <span className=\"btn btn-primary plus\" onClick={() => increaseQty(item.product, item.quantity, item.stock)}>+</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\r\n                                                <i id=\"delete_cart_item\" className=\"fa fa-trash btn btn-danger\" onClick={() => removeCartItemHandler(item.product)} ></i>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr />\r\n                                </Fragment>\r\n                            ))}\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-lg-3 my-4\">\r\n                            <div id=\"order_summary\">\r\n                                <h4>Order Summary</h4>\r\n                                <hr />\r\n                                <p>Subtotal:  <span className=\"order-summary-values\">{cartItems.reduce((acc, item) => (acc + Number(item.quantity)), 0)} (Units)</span></p>\r\n                                <p>Est. total: <span className=\"order-summary-values\">${cartItems.reduce((acc, item) => acc + item.quantity * item.price, 0).toFixed(2)}</span></p>\r\n\r\n                                <hr />\r\n                                <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={checkoutHandler}>Check out</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Cart","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CheckoutSteps = ({ shipping, confirmOrder, payment }) => {\r\n    return (\r\n        <div className=\"checkout-progress d-flex justify-content-center mt-5\">\r\n\r\n            {shipping ? <Link to='shippping' className=\"float-right\">\r\n                <div className=\"triangle2-active\"></div>\r\n                <div className=\"step active-step\">Shipping</div>\r\n                <div className=\"triangle-active\"></div>\r\n            </Link> : <Link to=\"#!\" disabled>\r\n                    <div className=\"triangle2-incomplete\"></div>\r\n                    <div className=\"step incomplete\">Shipping</div>\r\n                    <div className=\"triangle-incomplete\"></div>\r\n                </Link>}\r\n\r\n            {confirmOrder ? <Link to='/order/confirm' className=\"float-right\">\r\n                <div className=\"triangle2-active\"></div>\r\n                <div className=\"step active-step\">Confirm Order</div>\r\n                <div className=\"triangle-active\"></div>\r\n            </Link> : <Link to=\"#!\" disabled>\r\n                    <div className=\"triangle2-incomplete\"></div>\r\n                    <div className=\"step incomplete\">Confirm Order</div>\r\n                    <div className=\"triangle-incomplete\"></div>\r\n                </Link>}\r\n\r\n            {payment ? <Link to='/payment' className=\"float-right\">\r\n                <div className=\"triangle2-active\"></div>\r\n                <div className=\"step active-step\">Payment</div>\r\n                <div className=\"triangle-active\"></div>\r\n            </Link> : <Link to=\"#!\" disabled>\r\n                    <div className=\"triangle2-incomplete\"></div>\r\n                    <div className=\"step incomplete\">Payment</div>\r\n                    <div className=\"triangle-incomplete\"></div>\r\n                </Link>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps","import React, { Fragment, useState } from 'react'\r\nimport { countries } from 'countries-list'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport CheckoutSteps from './CheckoutSteps'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { saveShippingInfo } from '../../actions/cartActions'\r\n\r\nconst Shipping = ({ history }) => {\r\n\r\n    const countriesList = Object.values(countries)\r\n\r\n    const { shippingInfo } = useSelector(state => state.cart)\r\n\r\n    const [address, setAddress] = useState(shippingInfo.address)\r\n    const [city, setCity] = useState(shippingInfo.city)\r\n    const [postalCode, setPostalCode] = useState(shippingInfo.postalCode)\r\n    const [phoneNo, setPhoneNo] = useState(shippingInfo.phoneNo)\r\n    const [country, setCountry] = useState(shippingInfo.country)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        dispatch(saveShippingInfo({ address, city, phoneNo, postalCode, country }))\r\n        //history.push('/order/confirm')\r\n    }\r\n\r\n    const confirmOrderHandler = () => {\r\n        history.push('/order/confirm')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <MetaData title={'Shipping Info'} />\r\n\r\n           <CheckoutSteps shipping />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mb-4\">Shipping Info</h1>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"address_field\">Address</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"address_field\"\r\n                                className=\"form-control\"\r\n                                value={address}\r\n                                onChange={(e) => setAddress(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"city_field\">City</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"city_field\"\r\n                                className=\"form-control\"\r\n                                value={city}\r\n                                onChange={(e) => setCity(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"phone_field\">Phone No</label>\r\n                            <input\r\n                                type=\"phone\"\r\n                                id=\"phone_field\"\r\n                                className=\"form-control\"\r\n                                value={phoneNo}\r\n                                onChange={(e) => setPhoneNo(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"postal_code_field\">Postal Code</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                id=\"postal_code_field\"\r\n                                className=\"form-control\"\r\n                                value={postalCode}\r\n                                onChange={(e) => setPostalCode(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"country_field\">Country</label>\r\n                            <select\r\n                                id=\"country_field\"\r\n                                className=\"form-control\"\r\n                                value={country}\r\n                                onChange={(e) => setCountry(e.target.value)}\r\n                                required\r\n                            >\r\n\r\n                                {countriesList.map(country => (\r\n                                    <option key={country.name} value={country.name}>\r\n                                        {country.name}\r\n                                    </option>\r\n                                ))}\r\n\r\n                            </select>\r\n                        </div>\r\n\r\n                        <button\r\n                            id=\"shipping_btn\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\"\r\n                            onClick={confirmOrderHandler}\r\n                           \r\n                        >\r\n                            CONTINUE\r\n                            </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Shipping\r\n","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport CheckoutSteps from './CheckoutSteps'\r\n\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst ConfirmOrder = ({ history }) => {\r\n\r\n    const { cartItems, shippingInfo } = useSelector(state => state.cart)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    // Calculate Order Prices\r\n    const itemsPrice = cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0)\r\n    const shippingPrice = itemsPrice > 200 ? 0 : 25\r\n    const taxPrice = Number((0.05 * itemsPrice).toFixed(2))\r\n    const totalPrice = (itemsPrice + shippingPrice + taxPrice).toFixed(2)\r\n\r\n    const processToPayment = () => {\r\n        const data = {\r\n            itemsPrice: itemsPrice.toFixed(2),\r\n            shippingPrice,\r\n            taxPrice,\r\n            totalPrice\r\n        }\r\n\r\n        sessionStorage.setItem('orderInfo', JSON.stringify(data))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <MetaData title={'Confirm Order'} />\r\n\r\n            <CheckoutSteps  confirmOrder />\r\n\r\n            <div className=\"row d-flex justify-content-between\">\r\n                <div className=\"col-12 col-lg-8 mt-5 order-confirm\">\r\n\r\n                    <h4 className=\"mb-3\">Shipping Info</h4>\r\n                    <p><b>Name:</b> {user && user.name}</p>\r\n                    <p><b>Phone:</b> {shippingInfo.phoneNo}</p>\r\n                    <p className=\"mb-4\"><b>Address:</b> {`${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`}</p>\r\n\r\n                    <hr />\r\n                    <h4 className=\"mt-4\">Your Cart Items:</h4>\r\n\r\n                    {cartItems.map(item => (\r\n                        <Fragment>\r\n                            <hr />\r\n                            <div className=\"cart-item my-1\" key={item.product}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-4 col-lg-2\">\r\n                                        <img src={item.image} alt=\"Laptop\" height=\"45\" width=\"65\" />\r\n                                    </div>\r\n\r\n                                    <div className=\"col-5 col-lg-6\">\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"col-4 col-lg-4 mt-4 mt-lg-0\">\r\n                                        <p>{item.quantity} x ${item.price} = <b>${(item.quantity * item.price).toFixed(2)}</b></p>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                        </Fragment>\r\n                    ))}\r\n\r\n\r\n\r\n                </div>\r\n\r\n                <div className=\"col-12 col-lg-3 my-4\">\r\n                    <div id=\"order_summary\">\r\n                        <h4>Order Summary</h4>\r\n                        <hr />\r\n                        <p>Subtotal:  <span className=\"order-summary-values\">${itemsPrice}</span></p>\r\n                        <p>Shipping: <span className=\"order-summary-values\">${shippingPrice}</span></p>\r\n                        <p>Tax:  <span className=\"order-summary-values\">${taxPrice}</span></p>\r\n\r\n                        <hr />\r\n\r\n                        <p>Total: <span className=\"order-summary-values\">${totalPrice}</span></p>\r\n\r\n                        <hr />\r\n                        <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={processToPayment}>Proceed to Payment</button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ConfirmOrder","  \r\nexport const CREATE_ORDER_REQUEST = 'CREATE_ORDER_REQUEST'\r\nexport const CREATE_ORDER_SUCCESS = 'CREATE_ORDER_SUCCESS'\r\nexport const CREATE_ORDER_FAIL = 'CREATE_ORDER_FAIL'\r\n\r\nexport const MY_ORDERS_REQUEST = 'MY_ORDERS_REQUEST'\r\nexport const MY_ORDERS_SUCCESS = 'MY_ORDERS_SUCCESS'\r\nexport const MY_ORDERS_FAIL = 'MY_ORDERS_FAIL'\r\n\r\nexport const ALL_ORDERS_REQUEST = 'ALL_ORDERS_REQUEST'\r\nexport const ALL_ORDERS_SUCCESS = 'ALL_ORDERS_SUCCESS'\r\nexport const ALL_ORDERS_FAIL = 'ALL_ORDERS_FAIL'\r\nexport const DELETE_ORDER_RESET = 'DELETE_ORDER_RESET'\r\n\r\nexport const UPDATE_ORDER_REQUEST = 'UPDATE_ORDER_REQUEST'\r\nexport const UPDATE_ORDER_SUCCESS = 'UPDATE_ORDER_SUCCESS'\r\nexport const UPDATE_ORDER_RESET = 'UPDATE_ORDER_RESET'\r\nexport const UPDATE_ORDER_FAIL = 'UPDATE_ORDER_FAIL'\r\n\r\nexport const DELETE_ORDER_REQUEST = 'DELETE_ORDER_REQUEST'\r\nexport const DELETE_ORDER_SUCCESS = 'DELETE_ORDER_SUCCESS'\r\nexport const DELETE_ORDER_FAIL    = 'DELETE_ORDER_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL    = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'","import axios from 'axios'\r\nimport {\r\n    CREATE_ORDER_REQUEST,\r\n    CREATE_ORDER_SUCCESS,\r\n    CREATE_ORDER_FAIL,\r\n    MY_ORDERS_REQUEST,\r\n    MY_ORDERS_SUCCESS,\r\n    MY_ORDERS_FAIL,\r\n    ALL_ORDERS_REQUEST,\r\n    ALL_ORDERS_SUCCESS,\r\n    ALL_ORDERS_FAIL,\r\n    UPDATE_ORDER_REQUEST,\r\n    UPDATE_ORDER_SUCCESS,\r\n    UPDATE_ORDER_FAIL,\r\n    DELETE_ORDER_REQUEST,\r\n    DELETE_ORDER_SUCCESS,\r\n    DELETE_ORDER_RESET,\r\n    DELETE_ORDER_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    CLEAR_ERRORS\r\n} from '../constants/orderConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n\r\n        dispatch({ type: CREATE_ORDER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/order/new', order, config)\r\n\r\n        dispatch({\r\n            type: CREATE_ORDER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CREATE_ORDER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Get curretly logged in user orders\r\nexport const myOrders = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: MY_ORDERS_REQUEST });\r\n\r\n        const { data } = await axios.get('/api/v1/orders/me')\r\n\r\n        dispatch({\r\n            type: MY_ORDERS_SUCCESS,\r\n            payload: data.orders\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: MY_ORDERS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Get order details\r\nexport const getOrderDetails = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ORDER_DETAILS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/v1/order/${id}`)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data.order\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Get all orders - ADMIN\r\nexport const allOrders = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ALL_ORDERS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/v1/admin/orders`)\r\n\r\n        dispatch({\r\n            type: ALL_ORDERS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALL_ORDERS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// update order\r\nexport const updateOrder = (id, orderData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_ORDER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/admin/order/${id}`, orderData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_ORDER_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_ORDER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Delete order\r\nexport const deleteOrder = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_ORDER_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/admin/order/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_ORDER_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_ORDER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Clear Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    })\r\n}","import React, { Fragment, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport CheckoutSteps from './CheckoutSteps'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createOrder, clearErrors } from '../../actions/orderActions'\r\n\r\nimport { useStripe, useElements, CardNumberElement, CardExpiryElement, CardCvcElement } from '@stripe/react-stripe-js'\r\n\r\nimport axios from 'axios'\r\n\r\nconst options = {\r\n    style: {\r\n        base: {\r\n            fontSize: '16px'\r\n        },\r\n        invalid: {\r\n            color: '#9e2146'\r\n        }\r\n    }\r\n}\r\n\r\nconst Payment = ({ history }) => {\r\n\r\n    //const alert = useAlert();\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user } = useSelector(state => state.auth)\r\n    const { cartItems, shippingInfo } = useSelector(state => state.cart);\r\n    const { error } = useSelector(state => state.newOrder)\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n    }, [dispatch, error])\r\n\r\n    const order = {\r\n        orderItems: cartItems,\r\n        shippingInfo\r\n    }\r\n\r\n    const orderInfo = JSON.parse(sessionStorage.getItem('orderInfo'));\r\n    if (orderInfo) {\r\n        order.itemsPrice = orderInfo.itemsPrice\r\n        order.shippingPrice = orderInfo.shippingPrice\r\n        order.taxPrice = orderInfo.taxPrice\r\n        order.totalPrice = orderInfo.totalPrice\r\n    }\r\n\r\n    const paymentData = {\r\n        amount: Math.round(orderInfo.totalPrice * 100)\r\n    }\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        document.querySelector('#pay_btn').disabled = false;\r\n\r\n        let res;\r\n        try {\r\n\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n\r\n            res = await axios.post('/api/v1/payment/process', paymentData, config)\r\n\r\n            const clientSecret = res.data.client_secret;\r\n\r\n            console.log(clientSecret);\r\n\r\n            if (!stripe || !elements) {\r\n                return;\r\n            }\r\n\r\n            const result = await stripe.confirmCardPayment(clientSecret, {\r\n                payment_method: {\r\n                    card: elements.getElement(CardNumberElement),\r\n                    billing_details: {\r\n                        name: user.name,\r\n                        email: user.email\r\n                    }\r\n                }\r\n            });\r\n\r\n            if (result.error) {\r\n                alert.error(result.error.message);\r\n                document.querySelector('#pay_btn').disabled = true;\r\n            } else {\r\n\r\n                // The payment is processed or not\r\n                if (result.paymentIntent.status === 'succeeded') {\r\n\r\n                    order.paymentInfo = {\r\n                        id: result.paymentIntent.id,\r\n                        status: result.paymentIntent.status\r\n                    }\r\n\r\n                    dispatch(createOrder(order))\r\n\r\n                   \r\n\r\n                    history.push('/success')\r\n                } else {\r\n                    alert.error('There is some issue while payment processing')\r\n                }\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            document.querySelector('#pay_btn').disabled = false;\r\n            alert.error(error.response.data.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Payment'} />\r\n\r\n            <CheckoutSteps shipping confirmOrder payment />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mb-4\">Card Info</h1>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"card_num_field\">Card Number</label>\r\n                            <CardNumberElement\r\n                                type=\"text\"\r\n                                id=\"card_num_field\"\r\n                                className=\"form-control\"\r\n                                options={options}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"card_exp_field\">Card Expiry</label>\r\n                            <CardExpiryElement\r\n                                type=\"text\"\r\n                                id=\"card_exp_field\"\r\n                                className=\"form-control\"\r\n                                options={options}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"card_cvc_field\">Card CVC</label>\r\n                            <CardCvcElement\r\n                                type=\"text\"\r\n                                id=\"card_cvc_field\"\r\n                                className=\"form-control\"\r\n                                options={options}\r\n                            />\r\n                        </div>\r\n\r\n\r\n                        <button\r\n                            id=\"pay_btn\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\"\r\n                        >\r\n                            Pay {` - ${orderInfo && orderInfo.totalPrice}`}\r\n                        </button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Payment","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport MetaData from '../layout/MetaData'\r\n\r\nconst OrderSuccess = () => {\r\n    return (\r\n        <Fragment>\r\n\r\n            <MetaData title={'Order Success'} />\r\n\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-6 mt-5 text-center\">\r\n                    <img className=\"my-5 img-fluid d-block mx-auto\" src=\"/images/order_success.png\" alt=\"Order Success\" width=\"200\" height=\"200\" />\r\n\r\n                    <h2>Your Order has been placed successfully.</h2>\r\n\r\n                    <Link to=\"/orders/me\">Go to Orders</Link>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default OrderSuccess","import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\n\r\n//import { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { myOrders, clearErrors } from '../../actions/orderActions'\r\n\r\nconst ListOrders = () => {\r\n\r\n    //const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, orders } = useSelector(state => state.myOrders);\r\n\r\n    useEffect(() => {\r\n        dispatch(myOrders());\r\n\r\n        if (error) {\r\n            alert(error);\r\n            dispatch(clearErrors())\r\n        }\r\n    }, [dispatch, error])\r\n\r\n    const setOrders = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Order ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Num of Items',\r\n                    field: 'numOfItems',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Amount',\r\n                    field: 'amount',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Status',\r\n                    field: 'status',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        orders.forEach(order => {\r\n            data.rows.push({\r\n                id: order._id,\r\n                numOfItems: order.orderItems.length,\r\n                amount: `$${order.totalPrice}`,\r\n                status: order.orderStatus && String(order.orderStatus).includes('Delivered')\r\n                    ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\r\n                    : <p style={{ color: 'red' }}>{order.orderStatus}</p>,\r\n                actions:\r\n                    <Link to={`/order/${order._id}`} className=\"btn btn-primary\">\r\n                        <i className=\"fa fa-eye\"></i>\r\n                    </Link>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <MetaData title={'My Orders'} />\r\n\r\n            <h1 className=\"my-5\">My Orders</h1>\r\n\r\n            {loading ? <Loader /> : (\r\n                <MDBDataTable\r\n                    data={setOrders()}\r\n                    className=\"px-3\"\r\n                    bordered\r\n                    striped\r\n                    hover\r\n                />\r\n            )}\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListOrders","import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\n\r\n//import { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getOrderDetails, clearErrors } from '../../actions/orderActions'\r\n\r\nconst OrderDetails = ({ match }) => {\r\n\r\n    //const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, order = {} } = useSelector(state => state.orderDetails)\r\n    const { shippingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus } = order\r\n\r\n    useEffect(() => {\r\n        dispatch(getOrderDetails(match.params.id));\r\n\r\n        if (error) {\r\n            alert(error);\r\n            dispatch(clearErrors())\r\n        }\r\n    }, [dispatch,  error, match.params.id])\r\n\r\n    const shippingDetails = shippingInfo && `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`\r\n\r\n    const isPaid = paymentInfo && paymentInfo.status === 'succeeded' ? true : false\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Order Details'} />\r\n\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <div className=\"row d-flex justify-content-between\">\r\n                        <div className=\"col-12 col-lg-8 mt-5 order-details\">\r\n\r\n                            <h1 className=\"my-5\">Order # {order._id}</h1>\r\n\r\n                            <h4 className=\"mb-4\">Shipping Info</h4>\r\n                            <p><b>Name:</b> {user && user.name}</p>\r\n                            <p><b>Phone:</b> {shippingInfo && shippingInfo.phoneNo}</p>\r\n                            <p className=\"mb-4\"><b>Address:</b>{shippingDetails}</p>\r\n                            <p><b>Amount:</b> ${totalPrice}</p>\r\n\r\n                            <hr />\r\n\r\n                            <h4 className=\"my-4\">Payment</h4>\r\n                            <p className={isPaid ? \"greenColor\" : \"redColor\"}><b>{isPaid ? \"PAID\" : \"NOT PAID\"}</b></p>\r\n\r\n\r\n                            <h4 className=\"my-4\">Order Status:</h4>\r\n                            <p className={order.orderStatus && String(order.orderStatus).includes('Delivered') ? \"greenColor\" : \"redColor\"} ><b>{orderStatus}</b></p>\r\n\r\n\r\n                            <h4 className=\"my-4\">Order Items:</h4>\r\n\r\n                            <hr />\r\n                            <div className=\"cart-item my-1\">\r\n                                {orderItems && orderItems.map(item => (\r\n                                    <div key={item.product} className=\"row my-5\">\r\n                                        <div className=\"col-4 col-lg-2\">\r\n                                            <img src={item.image} alt={item.name} height=\"45\" width=\"65\" />\r\n                                        </div>\r\n\r\n                                        <div className=\"col-5 col-lg-5\">\r\n                                            <Link to={`/products/${item.product}`}>{item.name}</Link>\r\n                                        </div>\r\n\r\n\r\n                                        <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                                            <p>${item.price}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                                            <p>{item.quantity} Piece(s)</p>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default OrderDetails","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Loader from '../layout/Loader'\r\nimport MetaData from '../layout/MetaData'\r\n\r\n//import { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login, clearErrors } from '../../actions/userActions'\r\n\r\nconst Login = ({ history, location }) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n   // const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n\r\n        if (isAuthenticated) {\r\n            history.push(redirect)\r\n        }\r\n\r\n        if (error) {\r\n            alert(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n    }, [dispatch,  isAuthenticated,  redirect, error, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <MetaData title={'Login'} />\r\n\r\n                    <div className=\"row wrapper\">\r\n                        <div className=\"col-10 col-lg-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                                <h1 className=\"mb-3\">Login</h1>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email_field\">Email</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        id=\"email_field\"\r\n                                        className=\"form-control\"\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password_field\">Password</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        id=\"password_field\"\r\n                                        className=\"form-control\"\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <Link to=\"/password/forgot\" className=\"float-right mb-4\">Forgot Password?</Link>\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                >\r\n                                    LOGIN\r\n                                </button>\r\n\r\n                                <Link to=\"/register\" className=\"float-right mt-3\">New User?</Link>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Login","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\n\r\nimport MetaData from '../layout/MetaData';\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { register, clearErrors } from '../../actions/userActions'\r\n\r\n\r\nconst Register = ({ history }) => {\r\n\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: ''\r\n        \r\n    })\r\n\r\n    const { name, email, password } = user;\r\n    const [avatar, setAvatar] = useState('')\r\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.png')\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {isAuthenticated, error, loading } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        \r\n        if (isAuthenticated) {\r\n          history.push('/')\r\n      }\r\n\r\n    }, [dispatch, isAuthenticated, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('password', password);\r\n        formData.set('avatar', avatar);\r\n\r\n\r\n        dispatch(register(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n        if (e.target.name === 'avatar') {\r\n            \r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                    setAvatarPreview(reader.result)\r\n                    setAvatar(reader.result)\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(e.target.files[0])\r\n\r\n        } else {\r\n            setUser({ ...user, [e.target.name]: e.target.value })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <MetaData title = {'Register User'} />\r\n            <div className=\"row wrapper\">\r\n\t\t<div className=\"col-10 col-lg-5\">\r\n        <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n            <h1 className=\"mb-3\">Register</h1>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name_field\">Name</label>\r\n                <input\r\n                    type=\"name\"\r\n                    id=\"name_field\"\r\n                    className=\"form-control\"\r\n                    name='name'\r\n                                value={name}\r\n                                onChange={onChange}\r\n                />\r\n          </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email_field\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email_field\"\r\n                                className=\"form-control\"\r\n                                name='email'\r\n                                value={email}\r\n                                onChange={onChange}\r\n               \r\n              />\r\n            </div>\r\n  \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password_field\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password_field\"\r\n                className=\"form-control\"\r\n                name='password'\r\n                                value={password}\r\n                                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group'>\r\n              <label htmlFor='avatar_upload'>Avatar</label>\r\n              <div className='d-flex align-items-center'>\r\n                  <div>\r\n                      <figure className='avatar mr-3 item-rtl'>\r\n                          <img\r\n                              src={avatarPreview}\r\n                              className='rounded-circle'\r\n                              alt='Avatar Preview'\r\n                          />\r\n                      </figure>\r\n                  </div>\r\n                  <div className='custom-file'>\r\n                      <input\r\n                          type='file'\r\n                          name='avatar'\r\n                          className='custom-file-input'\r\n                                        id='customFile'\r\n                                        accept=\"images/*\"\r\n                                        onChange={onChange}\r\n                      />\r\n                      <label className='custom-file-label' htmlFor='customFile'>\r\n                          Choose Avatar\r\n                      </label>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n  \r\n            <button\r\n              id=\"register_button\"\r\n              type=\"submit\"\r\n                            className=\"btn btn-block py-3\"\r\n                            disabled={loading ? true : false }\r\n            >\r\n              REGISTER\r\n            </button>\r\n          </form>\r\n\t\t  </div>\r\n    </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport Loader from '../layout/Loader'\r\nimport MetaData from '../layout/MetaData'\r\n\r\nconst Profile = () => {\r\n\r\n    const { user, loading } = useSelector(state => state.auth)\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <MetaData title={'Your Profile'} />\r\n\r\n                    <h2 className=\"mt-5 ml-5\">My Profile</h2>\r\n                    <div className=\"row justify-content-around mt-5 user-info\">\r\n                        <div className=\"col-12 col-md-3\">\r\n                            <figure className='avatar avatar-profile'>\r\n                                <img className=\"rounded-circle img-fluid\" src={user.avatar.url} alt={user.name} />\r\n                            </figure>\r\n                            <Link to=\"/me/update\" id=\"edit_profile\" className=\"btn btn-primary btn-block my-5\">\r\n                                Edit Profile\r\n                            </Link>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-md-5\">\r\n                            <h4>Full Name</h4>\r\n                            <p>{user.name}</p>\r\n\r\n                            <h4>Email Address</h4>\r\n                            <p>{user.email}</p>\r\n\r\n                            <h4>Joined On</h4>\r\n                            <p>{String(user.createdAt).substring(0, 10)}</p>\r\n\r\n                            {user.role !== 'admin' && (\r\n                                <Link to=\"/orders/me\" className=\"btn btn-danger btn-block mt-5\">\r\n                                    My Orders\r\n                                </Link>\r\n                            )}\r\n\r\n                            <Link to=\"/password/update\" className=\"btn btn-primary btn-block mt-3\">\r\n                                Change Password\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\n//import { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateProfile, loadUser, clearErrors } from '../../actions/userActions'\r\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants'\r\n\r\nconst UpdateProfile = ({ history }) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [avatar, setAvatar] = useState('')\r\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\r\n\r\n   // const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user } = useSelector(state => state.auth);\r\n    const { error, isUpdated, loading } = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n\r\n        if (user) {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setAvatarPreview(user.avatar.url)\r\n        }\r\n\r\n        /*if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }*/\r\n\r\n        if(isUpdated) {\r\n           // alert.success('User updated successfully')\r\n            \r\n            dispatch(loadUser());\r\n            \r\n             history.push('/me');\r\n\r\n            \r\n\r\n            dispatch({\r\n                type: UPDATE_PROFILE_RESET\r\n            })\r\n        }\r\n\r\n    }, [dispatch, user, history, isUpdated])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        \r\n        formData.set('email', email);\r\n        formData.set('avatar', avatar);\r\n\r\n        dispatch(updateProfile(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setAvatarPreview(reader.result)\r\n                setAvatar(reader.result)\r\n            }\r\n        }\r\n\r\n        reader.readAsDataURL(e.target.files[0])\r\n \r\n    }\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Profile'} />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                        <h1 className=\"mt-2 mb-5\">Update Profile</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Name</label>\r\n                            <input\r\n                                type=\"name\"\r\n                                id=\"name_field\"\r\n                                className=\"form-control\"\r\n                                name='name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                className=\"form-control\"\r\n                                name='email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <label htmlFor='avatar_upload'>Avatar</label>\r\n                            <div className='d-flex align-items-center'>\r\n                                <div>\r\n                                    <figure className='avatar mr-3 item-rtl'>\r\n                                        <img\r\n                                            src={avatarPreview}\r\n                                            className='rounded-circle'\r\n                                            alt='Avatar Preview'\r\n                                        />\r\n                                    </figure>\r\n                                </div>\r\n                                <div className='custom-file'>\r\n                                    <input\r\n                                        type='file'\r\n                                        name='avatar'\r\n                                        className='custom-file-input'\r\n                                        id='customFile'\r\n                                        accept='image/*'\r\n                                        onChange={onChange}\r\n                                    />\r\n                                    <label className='custom-file-label' htmlFor='customFile'>\r\n                                        Choose Avatar\r\n                                </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Update</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProfile","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\n//import { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updatePassword, clearErrors } from '../../actions/userActions'\r\nimport { UPDATE_PASSWORD_RESET } from '../../constants/userConstants'\r\n\r\nconst UpdatePassword = ({ history }) => {\r\n\r\n    const [oldPassword, setOldPassword] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    //const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, isUpdated, loading } = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n\r\n       /* if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }*/\r\n\r\n        if (isUpdated) {\r\n            alert.success('Password updated successfully')\r\n\r\n            history.push('/me')\r\n\r\n            dispatch({\r\n                type: UPDATE_PASSWORD_RESET\r\n            })\r\n        }\r\n\r\n    }, [dispatch, history, isUpdated])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('oldPassword', oldPassword);\r\n        formData.set('password', password);\r\n\r\n        dispatch(updatePassword(formData))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Change Password'} />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mt-2 mb-5\">Update Password</h1>\r\n                        <div className=\"form-group\">\r\n                            <label for=\"old_password_field\">Old Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"old_password_field\"\r\n                                className=\"form-control\"\r\n                                value={oldPassword}\r\n                                onChange={(e) => setOldPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label for=\"new_password_field\">New Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"new_password_field\"\r\n                                className=\"form-control\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Update Password</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdatePassword","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\n//import { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { forgotPassword, clearErrors } from '../../actions/userActions'\r\n\r\nconst ForgotPassword = () => {\r\n\r\n    const [email, setEmail] = useState('')\r\n\r\n    //const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, loading, message } = useSelector(state => state.forgotPassword)\r\n\r\n    useEffect(() => {\r\n\r\n       /* if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        } */\r\n\r\n       /* if (message) {\r\n            alert.success(message)\r\n        }*/\r\n\r\n    }, [dispatch, error])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('email', email);\r\n\r\n        dispatch(forgotPassword(formData))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Forgot Password'} />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mb-3\">Forgot Password</h1>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Enter Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                className=\"form-control\"\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button\r\n                            id=\"forgot_password_button\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\"\r\n                            disabled={loading ? true : false} >\r\n                            Send Email\r\n                    </button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\n//import { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { resetPassword, clearErrors } from '../../actions/userActions'\r\n\r\nconst NewPassword = ({ history, match }) => {\r\n\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    //const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, success } = useSelector(state => state.forgotPassword)\r\n\r\n    useEffect(() => {\r\n\r\n       /* if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }*/\r\n\r\n        if (success) {\r\n           \r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, alert, error, success, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('password', password);\r\n        formData.set('confirmPassword', confirmPassword);\r\n\r\n        dispatch(resetPassword(match.params.token, formData))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <MetaData title={'New Password Reset'} />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mb-3\">New Password</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password_field\">Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"password_field\"\r\n                                className=\"form-control\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"confirm_password_field\">Confirm Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"confirm_password_field\"\r\n                                className=\"form-control\"\r\n                                value={confirmPassword}\r\n                                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button\r\n                            id=\"new_password_button\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\">\r\n                            Set Password\r\n                        </button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NewPassword\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <div className=\"sidebar-wrapper\">\r\n            <nav id=\"sidebar\">\r\n                <ul className=\"list-unstyled components\">\r\n                    <li>\r\n                        <Link to=\"/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <a href=\"#productSubmenu\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\"><i\r\n                            className=\"fa fa-product-hunt\"></i> Products</a>\r\n                        <ul className=\"collapse list-unstyled\" id=\"productSubmenu\">\r\n                            <li>\r\n                                <Link to=\"/admin/products\"><i className=\"fa fa-clipboard\"></i> All</Link>\r\n                            </li>\r\n\r\n                            <li>\r\n                                <Link to=\"/admin/product\"><i className=\"fa fa-plus\"></i> Create</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <Link to=\"/admin/orders\"><i className=\"fa fa-shopping-basket\"></i> Orders</Link>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <Link to=\"/admin/users\"><i className=\"fa fa-users\"></i> Users</Link>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <Link to=\"/admin/reviews\"><i className=\"fa fa-star\"></i> Reviews</Link>\r\n                    </li>\r\n\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar","import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\n\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { getAdminProducts } from '../../actions/productActions'\r\nimport { allOrders } from '../../actions/orderActions'\r\nimport { allUsers } from '../../actions/userActions'\r\n\r\nconst Dashboard = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n   const { products } = useSelector(state => state.products)\r\n    const { users } = useSelector(state => state.allUsers)\r\n    const { orders, totalAmount, loading } = useSelector(state => state.allOrders)\r\n\r\n    let outOfStock = 0;\r\n    products.forEach(product => {\r\n        if (product.stock === 0) {\r\n            outOfStock += 1;\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(getAdminProducts())\r\n        dispatch(allOrders())\r\n        dispatch(allUsers())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row\">\r\n                \r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <h1 className=\"my-4\">Dashboard</h1>\r\n\r\n                   \r\n                        <Fragment>\r\n                            <MetaData title={'Admin Dashboard'} />\r\n\r\n                            <div className=\"row pr-4\">\r\n                                <div className=\"col-xl-12 col-sm-12 mb-3\">\r\n                                    <div className=\"card text-white bg-primary o-hidden h-100\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"text-center card-font-size\">Total Amount<br /> <b> Tk. {totalAmount}</b>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row pr-4\">\r\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n                                    <div className=\"card text-white bg-success o-hidden h-100\">\r\n                                        <div className=\"card-body\">\r\n                                        <div className=\"text-center card-font-size\">Products<br /> <b>{products && products.length} </b></div>\r\n                                        </div>\r\n                                        <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/products\">\r\n                                            <span className=\"float-left\">View Details</span>\r\n                                            <span className=\"float-right\">\r\n                                                <i className=\"fa fa-angle-right\"></i>\r\n                                            </span>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n                                    <div className=\"card text-white bg-danger o-hidden h-100\">\r\n                                        <div className=\"card-body\">\r\n                                        <div className=\"text-center card-font-size\">Orders<br /> <b>{orders && orders.length}</b></div>\r\n                                        </div>\r\n                                        <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/orders\">\r\n                                            <span className=\"float-left\">View Details</span>\r\n                                            <span className=\"float-right\">\r\n                                                <i className=\"fa fa-angle-right\"></i>\r\n                                            </span>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n                                    <div className=\"card text-white bg-info o-hidden h-100\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"text-center card-font-size\">Users<br /> <b>{users && users.length}</b></div>\r\n                                        </div>\r\n                                        <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/users\">\r\n                                            <span className=\"float-left\">View Details</span>\r\n                                            <span className=\"float-right\">\r\n                                                <i className=\"fa fa-angle-right\"></i>\r\n                                            </span>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n                                    <div className=\"card text-white bg-warning o-hidden h-100\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"text-center card-font-size\">Out of Stock<br /> <b>{outOfStock}</b></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Fragment>\r\n                    \r\n\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default Dashboard","import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\n\r\n//import { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAdminProducts, deleteProduct, clearErrors } from '../../actions/productActions'\r\nimport { DELETE_PRODUCT_RESET } from '../../constants/productConstants'\r\n\r\nconst ProductsList = ({ history }) => {\r\n\r\n    //const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, products } = useSelector(state => state.products);\r\n    const { error: deleteError, isDeleted } = useSelector(state => state.product)\r\n\r\n    useEffect(() => {\r\n        dispatch(getAdminProducts());\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (deleteError) {\r\n            alert.error(deleteError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert('Product deleted successfully');\r\n            history.push('/admin/products');\r\n            dispatch({ type: DELETE_PRODUCT_RESET })\r\n        }\r\n\r\n    }, [dispatch,  error, deleteError, isDeleted, history])\r\n\r\n    const setProducts = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Name',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Price',\r\n                    field: 'price',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Stock',\r\n                    field: 'stock',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        products.forEach(product => {\r\n            data.rows.push({\r\n                id: product._id,\r\n                name: product.name,\r\n                price: `$${product.price}`,\r\n                stock: product.stock,\r\n                actions: <Fragment>\r\n                    <Link to={`/admin/product/${product._id}`} className=\"btn btn-primary py-1 px-2\">\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                    </Link>\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteProductHandler(product._id)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </Fragment>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n    const deleteProductHandler = (id) => {\r\n        dispatch(deleteProduct(id))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'All Products'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <h1 className=\"my-5\">All Products</h1>\r\n\r\n                        {loading ? <Loader /> : (\r\n                            <MDBDataTable\r\n                                data={setProducts()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        )}\r\n\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProductsList","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Sidebar from './Sidebar'\r\n\r\n//import { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { newProduct, clearErrors } from '../../actions/productActions'\r\nimport { NEW_PRODUCT_RESET } from '../../constants/productConstants'\r\n\r\nconst NewProduct = ({ history }) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [stock, setStock] = useState(0);\r\n    const [seller, setSeller] = useState('');\r\n    const [images, setImages] = useState([]);\r\n    const [imagesPreview, setImagesPreview] = useState([])\r\n\r\n    const categories = [\r\n        'Electronics',\r\n        'Cameras',\r\n        'Laptops',\r\n        'Accessories',\r\n        'Headphones',\r\n        'Food',\r\n        \"Books\",\r\n        'Clothes/Shoes',\r\n        'Beauty/Health',\r\n        'Sports',\r\n        'Outdoor',\r\n        'Home',\r\n        'Fruits'\r\n    ]\r\n\r\n    //const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, success } = useSelector(state => state.newProduct);\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (success) {\r\n            history.push('/admin/products');\r\n            alert('Product created successfully');\r\n            dispatch({ type: NEW_PRODUCT_RESET })\r\n        }\r\n\r\n    }, [dispatch,  error, success, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('price', price);\r\n        formData.set('description', description);\r\n        formData.set('category', category);\r\n        formData.set('stock', stock);\r\n        formData.set('seller', seller);\r\n\r\n        images.forEach(image => {\r\n            formData.append('images', image)\r\n        })\r\n\r\n        dispatch(newProduct(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n\r\n        const files = Array.from(e.target.files)\r\n\r\n        setImagesPreview([]);\r\n        setImages([])\r\n\r\n        files.forEach(file => {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\r\n                    setImages(oldArray => [...oldArray, reader.result])\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'New Product'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <div className=\"wrapper my-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                                <h1 className=\"mb-4\">New Product</h1>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name_field\">Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"name_field\"\r\n                                        className=\"form-control\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"price_field\">Price</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"price_field\"\r\n                                        className=\"form-control\"\r\n                                        value={price}\r\n                                        onChange={(e) => setPrice(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"description_field\">Description</label>\r\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"category_field\">Category</label>\r\n                                    <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e) => setCategory(e.target.value)}>\r\n                                        {categories.map(category => (\r\n                                            <option key={category} value={category} >{category}</option>\r\n                                        ))}\r\n\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"stock_field\">Stock</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        id=\"stock_field\"\r\n                                        className=\"form-control\"\r\n                                        value={stock}\r\n                                        onChange={(e) => setStock(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"seller_field\">Seller Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"seller_field\"\r\n                                        className=\"form-control\"\r\n                                        value={seller}\r\n                                        onChange={(e) => setSeller(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className='form-group'>\r\n                                    <label>Images</label>\r\n\r\n                                    <div className='custom-file'>\r\n                                        <input\r\n                                            type='file'\r\n                                            name='product_images'\r\n                                            className='custom-file-input'\r\n                                            id='customFile'\r\n                                            onChange={onChange}\r\n                                            multiple\r\n                                        />\r\n                                        <label className='custom-file-label' htmlFor='customFile'>\r\n                                            Choose Images\r\n                                     </label>\r\n                                    </div>\r\n\r\n                                    {imagesPreview.map(img => (\r\n                                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\r\n                                    ))}\r\n\r\n                                </div>\r\n\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                    disabled={loading ? true : false}\r\n                                >\r\n                                    CREATE\r\n                                </button>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NewProduct","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Sidebar from './Sidebar'\r\n\r\n//import { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateProduct, getProductDetails, clearErrors } from '../../actions/productActions'\r\nimport { UPDATE_PRODUCT_RESET } from '../../constants/productConstants'\r\n\r\nconst UpdateProduct = ({ match, history }) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [stock, setStock] = useState(0);\r\n    const [seller, setSeller] = useState('');\r\n    const [images, setImages] = useState([]);\r\n\r\n    const [oldImages, setOldImages] = useState([]);\r\n    const [imagesPreview, setImagesPreview] = useState([])\r\n\r\n    const categories = [\r\n        'Electronics',\r\n        'Cameras',\r\n        'Laptops',\r\n        'Accessories',\r\n        'Headphones',\r\n        'Food',\r\n        \"Books\",\r\n        'Clothes/Shoes',\r\n        'Beauty/Health',\r\n        'Sports',\r\n        'Outdoor',\r\n        'Home',\r\n        'Fruits'\r\n    ]\r\n\r\n    //const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, product } = useSelector(state => state.productDetails)\r\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.product);\r\n\r\n    const productId = match.params.id;\r\n\r\n    useEffect(() => {\r\n\r\n        if (product && product._id !== productId) {\r\n            dispatch(getProductDetails(productId));\r\n        } else {\r\n            setName(product.name);\r\n            setPrice(product.price);\r\n            setDescription(product.description);\r\n            setCategory(product.category);\r\n            setSeller(product.seller);\r\n            setStock(product.stock)\r\n            setOldImages(product.images)\r\n        }\r\n\r\n        if (error) {\r\n            alert(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (updateError) {\r\n            alert(updateError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n\r\n        if (isUpdated) {\r\n            history.push('/admin/products');\r\n            alert('Product updated successfully');\r\n            dispatch({ type: UPDATE_PRODUCT_RESET })\r\n        }\r\n\r\n    }, [dispatch, error, isUpdated, history, updateError, product, productId])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('price', price);\r\n        formData.set('description', description);\r\n        formData.set('category', category);\r\n        formData.set('stock', stock);\r\n        formData.set('seller', seller);\r\n\r\n        images.forEach(image => {\r\n            formData.append('images', image)\r\n        })\r\n\r\n        dispatch(updateProduct(product._id, formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n\r\n        const files = Array.from(e.target.files)\r\n\r\n        setImagesPreview([]);\r\n        setImages([])\r\n        setOldImages([])\r\n\r\n        files.forEach(file => {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\r\n                    setImages(oldArray => [...oldArray, reader.result])\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Product'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <div className=\"wrapper my-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                                <h1 className=\"mb-4\">Update Product</h1>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name_field\">Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"name_field\"\r\n                                        className=\"form-control\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"price_field\">Price</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"price_field\"\r\n                                        className=\"form-control\"\r\n                                        value={price}\r\n                                        onChange={(e) => setPrice(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"description_field\">Description</label>\r\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"category_field\">Category</label>\r\n                                    <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e) => setCategory(e.target.value)}>\r\n                                        {categories.map(category => (\r\n                                            <option key={category} value={category} >{category}</option>\r\n                                        ))}\r\n\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"stock_field\">Stock</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        id=\"stock_field\"\r\n                                        className=\"form-control\"\r\n                                        value={stock}\r\n                                        onChange={(e) => setStock(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"seller_field\">Seller Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"seller_field\"\r\n                                        className=\"form-control\"\r\n                                        value={seller}\r\n                                        onChange={(e) => setSeller(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className='form-group'>\r\n                                    <label>Images</label>\r\n\r\n                                    <div className='custom-file'>\r\n                                        <input\r\n                                            type='file'\r\n                                            name='product_images'\r\n                                            className='custom-file-input'\r\n                                            id='customFile'\r\n                                            onChange={onChange}\r\n                                            multiple\r\n                                        />\r\n                                        <label className='custom-file-label' htmlFor='customFile'>\r\n                                            Choose Images\r\n                                 </label>\r\n                                    </div>\r\n\r\n                                    {oldImages && oldImages.map(img => (\r\n                                        <img key={img} src={img.url} alt={img.url} className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\r\n                                    ))}\r\n\r\n                                    {imagesPreview.map(img => (\r\n                                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\r\n                                    ))}\r\n\r\n                                </div>\r\n\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                    disabled={loading ? true : false}\r\n                                >\r\n                                    UPDATE\r\n                            </button>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProduct","import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\n\r\n//import { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { allOrders, deleteOrder, clearErrors } from '../../actions/orderActions'\r\nimport { DELETE_ORDER_RESET } from '../../constants/orderConstants'\r\n\r\nconst OrdersList = ({ history }) => {\r\n\r\n    //const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, orders } = useSelector(state => state.allOrders);\r\n    const { isDeleted } = useSelector(state => state.order)\r\n\r\n    useEffect(() => {\r\n        dispatch(allOrders());\r\n\r\n        if (error) {\r\n            alert(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert.success('Order deleted successfully');\r\n            history.push('/admin/orders');\r\n            dispatch({ type: DELETE_ORDER_RESET })\r\n        }\r\n\r\n    }, [dispatch, error, isDeleted, history])\r\n\r\n    const deleteOrderHandler = (id) => {\r\n        dispatch(deleteOrder(id))\r\n    }\r\n\r\n    const setOrders = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Order ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'No of Items',\r\n                    field: 'numofItems',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Amount',\r\n                    field: 'amount',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Status',\r\n                    field: 'status',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        orders.forEach(order => {\r\n            data.rows.push({\r\n                id: order._id,\r\n                numofItems: order.orderItems.length,\r\n                amount: `$${order.totalPrice}`,\r\n                status: order.orderStatus && String(order.orderStatus).includes('Delivered')\r\n                    ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\r\n                    : <p style={{ color: 'red' }}>{order.orderStatus}</p>,\r\n                actions: <Fragment>\r\n                    <Link to={`/admin/order/${order._id}`} className=\"btn btn-primary py-1 px-2\">\r\n                        <i className=\"fa fa-eye\"></i>\r\n                    </Link>\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick = {() => deleteOrderHandler(order._id)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </Fragment>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'All Orders'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <h1 className=\"my-5\">All Orders</h1>\r\n\r\n                        {loading ? <Loader /> : (\r\n                            <MDBDataTable\r\n                                data={setOrders()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        )}\r\n\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default OrdersList","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\n\r\n//import { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getOrderDetails, updateOrder, clearErrors } from '../../actions/orderActions'\r\nimport { UPDATE_ORDER_RESET } from '../../constants/orderConstants'\r\n\r\nconst ProcessOrder = ({ match }) => {\r\n\r\n    const [status, setStatus] = useState('');\r\n\r\n    //const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, order = {} } = useSelector(state => state.orderDetails)\r\n    const { shippingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus } = order\r\n    const { error, isUpdated } = useSelector(state => state.order)\r\n\r\n    const orderId = match.params.id;\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(getOrderDetails(orderId))\r\n\r\n        if (error) {\r\n            alert(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n\r\n        if (isUpdated) {\r\n            alert('Order updated successfully');\r\n            dispatch({ type: UPDATE_ORDER_RESET })\r\n        }\r\n\r\n    }, [dispatch,  error, isUpdated, orderId])\r\n\r\n\r\n    const updateOrderHandler = (id) => {\r\n\r\n        const formData = new FormData();\r\n        formData.set('status', status);\r\n\r\n        dispatch(updateOrder(id, formData))\r\n    }\r\n\r\n    const shippingDetails = shippingInfo && `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`\r\n    const isPaid = paymentInfo && paymentInfo.status === 'succeeded' ? true : false\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={`Process Order # ${order && order._id}`} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        {loading ? <Loader /> : (\r\n                            <div className=\"row d-flex justify-content-around\">\r\n                                <div className=\"col-12 col-lg-7 order-details\">\r\n\r\n                                    <h2 className=\"my-5\">Order # {order._id}</h2>\r\n\r\n                                    <h4 className=\"mb-4\">Shipping Info</h4>\r\n                                    <p><b>Name:</b> {user && user.name}</p>\r\n                                    <p><b>Phone:</b> {shippingInfo && shippingInfo.phoneNo}</p>\r\n                                    <p className=\"mb-4\"><b>Address:</b>{shippingDetails}</p>\r\n                                    <p><b>Amount:</b> ${totalPrice}</p>\r\n\r\n                                    <hr />\r\n\r\n                                    <h4 className=\"my-4\">Payment</h4>\r\n                                    <p className={isPaid ? \"greenColor\" : \"redColor\"}><b>{isPaid ? \"PAID\" : \"NOT PAID\"}</b></p>\r\n\r\n                                    <h4 className=\"my-4\">Stripe ID</h4>\r\n                                    <p><b>{paymentInfo && paymentInfo.id}</b></p>\r\n\r\n                                    <h4 className=\"my-4\">Order Status:</h4>\r\n                                    <p className={order.orderStatus && String(order.orderStatus).includes('Delivered') ? \"greenColor\" : \"redColor\"} ><b>{orderStatus}</b></p>\r\n\r\n\r\n\r\n                                    <h4 className=\"my-4\">Order Items:</h4>\r\n\r\n                                    <hr />\r\n                                    <div className=\"cart-item my-1\">\r\n                                        {orderItems && orderItems.map(item => (\r\n                                            <div key={item.product} className=\"row my-5\">\r\n                                                <div className=\"col-4 col-lg-2\">\r\n                                                    <img src={item.image} alt={item.name} height=\"45\" width=\"65\" />\r\n                                                </div>\r\n\r\n                                                <div className=\"col-5 col-lg-5\">\r\n                                                    <Link to={`/products/${item.product}`}>{item.name}</Link>\r\n                                                </div>\r\n\r\n\r\n                                                <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                                                    <p>${item.price}</p>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                                                    <p>{item.quantity} Piece(s)</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                    <hr />\r\n                                </div>\r\n\r\n                                <div className=\"col-12 col-lg-3 mt-5\">\r\n                                    <h4 className=\"my-4\">Status</h4>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name='status'\r\n                                            value={status}\r\n                                            onChange={(e) => setStatus(e.target.value)}\r\n                                        >\r\n                                            <option value=\"Processing\">Processing</option>\r\n                                            <option value=\"Shipped\">Shipped</option>\r\n                                            <option value=\"Delivered\">Delivered</option>\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <button className=\"btn btn-primary btn-block\" onClick={() => updateOrderHandler(order._id)}>\r\n                                        Update Status\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        )}\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProcessOrder","import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\n\r\n//import { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { allUsers, deleteUser, clearErrors } from '../../actions/userActions'\r\n import { DELETE_USER_RESET } from '../../constants/userConstants'\r\n\r\nconst UsersList = ({ history }) => {\r\n\r\n    //const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, users } = useSelector(state => state.allUsers);\r\n    const { isDeleted } = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n        dispatch(allUsers());\r\n\r\n        if (error) {\r\n            alert(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert('User deleted successfully');\r\n            history.push('/admin/users');\r\n            dispatch({ type: DELETE_USER_RESET })\r\n        }\r\n\r\n    }, [dispatch, error, history, isDeleted])\r\n\r\n    const deleteUserHandler = (id) => {\r\n        dispatch(deleteUser(id))\r\n    }\r\n    console.log('users', users)\r\n    const setUsers = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'User ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Name',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Email',\r\n                    field: 'email',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Role',\r\n                    field: 'role',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        users.forEach(user => {\r\n            data.rows.push({\r\n                id: user._id,\r\n                name: user.name,\r\n                email: user.email,\r\n                role: user.role,\r\n                actions: <Fragment>\r\n                    <Link to={`/admin/user/${user._id}`} className=\"btn btn-primary py-1 px-2\">\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                    </Link>\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteUserHandler(user._id)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </Fragment>\r\n\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'All Users'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <h1 className=\"my-5\">All Users</h1>\r\n\r\n                        {loading ? <Loader /> : (\r\n                            <MDBDataTable\r\n                                data={setUsers()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        )}\r\n\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UsersList","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Sidebar from './Sidebar'\r\n\r\n//import { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateUser, getUserDetails, clearErrors } from '../../actions/userActions'\r\nimport { UPDATE_USER_RESET } from '../../constants/userConstants'\r\n\r\nconst UpdateUser = ({ history, match }) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [role, setRole] = useState('')\r\n\r\n    //const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, isUpdated } = useSelector(state => state.user);\r\n    const { user } = useSelector(state => state.userDetails)\r\n\r\n    const userId = match.params.id;\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(user && user._id !== userId);\r\n        if (user && user._id !== userId) {\r\n            dispatch(getUserDetails(userId))\r\n        } else {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setRole(user.role)\r\n        }\r\n\r\n        if (error) {\r\n            alert(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (isUpdated) {\r\n            alert('User updated successfully')\r\n\r\n            history.push('/admin/users')\r\n\r\n            dispatch({\r\n                type: UPDATE_USER_RESET\r\n            })\r\n        }\r\n\r\n    }, [dispatch, error, history, isUpdated, userId, user])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('role', role);\r\n\r\n        dispatch(updateUser(user._id, formData))\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={`Update User`} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <div className=\"row wrapper\">\r\n                        <div className=\"col-10 col-lg-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                                <h1 className=\"mt-2 mb-5\">Update User</h1>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name_field\">Name</label>\r\n                                    <input\r\n                                        type=\"name\"\r\n                                        id=\"name_field\"\r\n                                        className=\"form-control\"\r\n                                        name='name'\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email_field\">Email</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        id=\"email_field\"\r\n                                        className=\"form-control\"\r\n                                        name='email'\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"role_field\">Role</label>\r\n\r\n                                    <select\r\n                                        id=\"role_field\"\r\n                                        className=\"form-control\"\r\n                                        name='role'\r\n                                        value={role}\r\n                                        onChange={(e) => setRole(e.target.value)}\r\n                                    >\r\n                                        <option value=\"user\">user</option>\r\n                                        <option value=\"admin\">admin</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" >Update</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateUser","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\n\r\n//import { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProductReviews, deleteReview, clearErrors } from '../../actions/productActions'\r\nimport { DELETE_REVIEW_RESET } from '../../constants/productConstants'\r\n\r\nconst ProductReviews = () => {\r\n\r\n    const [productId, setProductId] = useState('')\r\n\r\n    //const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, reviews } = useSelector(state => state.productReviews);\r\n    const { isDeleted, error: deleteError } = useSelector(state => state.review)\r\n\r\n    useEffect(() => {\r\n\r\n        /*if (error) {\r\n            alert(error);\r\n            dispatch(clearErrors())\r\n        }*/\r\n\r\n        if (deleteError) {\r\n            alert(deleteError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (productId !== '') {\r\n            dispatch(getProductReviews(productId))\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert('Review deleted successfully');\r\n            dispatch({ type: DELETE_REVIEW_RESET })\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, error, deleteError, productId, isDeleted])\r\n\r\n    const deleteReviewHandler = (id) => {\r\n        dispatch(deleteReview(id, productId))\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(getProductReviews(productId))\r\n    }\r\n\r\n    const setReviews = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Review ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Rating',\r\n                    field: 'rating',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Comment',\r\n                    field: 'comment',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'User',\r\n                    field: 'user',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        reviews.forEach(review => {\r\n            data.rows.push({\r\n                id: review._id,\r\n                rating: review.rating,\r\n                comment: review.comment,\r\n                user: review.name,\r\n\r\n                actions:\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteReviewHandler(review._id)}>\r\n                         <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Product Reviews'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <div className=\"row justify-content-center mt-5\">\r\n                            <div className=\"col-5\">\r\n                                <form onSubmit={submitHandler}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"productId_field\">Enter Product ID</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id=\"productId_field\"\r\n                                            className=\"form-control\"\r\n                                            value={productId}\r\n                                            onChange={(e) => setProductId(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <button\r\n                                        id=\"search_button\"\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-primary btn-block py-2\"\r\n                                    >\r\n                                        SEARCH\r\n\t\t\t\t\t\t\t\t    </button>\r\n                                </ form>\r\n                            </div>\r\n\r\n                        </div>\r\n                        \r\n                        {reviews && reviews.length > 0 ? (\r\n                            <MDBDataTable\r\n                                data={setReviews()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        ) : (\r\n                                <p className=\"mt-5 text-center\">No Reviews.</p>\r\n                            )}\r\n\r\n\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProductReviews","import React, { Fragment } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst ProtectedRoute = ({ isAdmin, component: Component, ...rest }) => {\r\n\r\n    const { isAuthenticated, loading, user } = useSelector(state => state.auth)\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading === false && (\r\n                <Route\r\n                    {...rest}\r\n                    render={props => {\r\n                        if (isAuthenticated === false) {\r\n                            return <Redirect to='/login' />\r\n                        }\r\n\r\n                        if (isAdmin === true && user.role !== 'admin') {\r\n                            return <Redirect to=\"/\" />\r\n                        }\r\n\r\n                        return <Component {...props} />\r\n                    }}\r\n                />\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport { productsReducer, newProductReducer, productReducer, productDetailsReducer, newReviewReducer, productReviewsReducer, reviewReducer } from './reducers/productReducers';\r\n\r\nimport { authReducer, userReducer, forgotPasswordReducer, allUsersReducer, userDetailsReducer } from './reducers/userReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { newOrderReducer, myOrdersReducer, orderDetailsReducer, allOrdersReducer, orderReducer } from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    products: productsReducer,\r\n    productDetails: productDetailsReducer,\r\n    newProduct: newProductReducer,\r\n    product: productReducer,\r\n    productReviews: productReviewsReducer,\r\n    review: reviewReducer,\r\n    auth: authReducer,\r\n    user: userReducer,\r\n    allUsers: allUsersReducer,\r\n    userDetails: userDetailsReducer,\r\n    forgotPassword: forgotPasswordReducer,\r\n    cart: cartReducer,\r\n    newOrder: newOrderReducer,\r\n    myOrders: myOrdersReducer,\r\n    allOrders: allOrdersReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    order: orderReducer,\r\n    newReview: newReviewReducer\r\n})\r\n\r\nlet initialState = {\r\n    cart: {\r\n        cartItems: localStorage.getItem('cartItems')\r\n            ? JSON.parse(localStorage.getItem('cartItems'))\r\n            : [],\r\n        \r\n        shippingInfo: localStorage.getItem('shippingInfo')\r\n            ? JSON.parse(localStorage.getItem('shippingInfo'))\r\n            : {}     \r\n    }\r\n}\r\nconst middlware = [thunk];\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middlware)))\r\nexport default store;","import {\r\n    ALL_PRODUCTS_REQUEST,\r\n    ALL_PRODUCTS_SUCCESS,\r\n    ALL_PRODUCTS_FAIL,\r\n    ADMIN_PRODUCTS_REQUEST,\r\n    ADMIN_PRODUCTS_SUCCESS,\r\n    ADMIN_PRODUCTS_FAIL,\r\n    NEW_PRODUCT_REQUEST,\r\n    NEW_PRODUCT_SUCCESS,\r\n    NEW_PRODUCT_RESET,\r\n    NEW_PRODUCT_FAIL ,\r\n    DELETE_PRODUCT_REQUEST,\r\n    DELETE_PRODUCT_SUCCESS,\r\n    DELETE_PRODUCT_RESET,\r\n    DELETE_PRODUCT_FAIL,\r\n    UPDATE_PRODUCT_REQUEST,\r\n    UPDATE_PRODUCT_SUCCESS,\r\n    UPDATE_PRODUCT_RESET  ,\r\n    UPDATE_PRODUCT_FAIL  , \r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    NEW_REVIEW_REQUEST,\r\n    NEW_REVIEW_SUCCESS,\r\n    NEW_REVIEW_RESET,\r\n    NEW_REVIEW_FAIL,\r\n    GET_REVIEWS_REQUEST, \r\n    GET_REVIEWS_SUCCESS,\r\n    GET_REVIEWS_FAIL,\r\n    DELETE_REVIEW_REQUEST,\r\n    DELETE_REVIEW_SUCCESS,\r\n    DELETE_REVIEW_RESET,\r\n    DELETE_REVIEW_FAIL,\r\n    CLEAR_ERRORS\r\n\r\n\r\n} from '../constants/productConstants';\r\n\r\n\r\nexport const productsReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n\r\n        case ALL_PRODUCTS_REQUEST:\r\n        case ADMIN_PRODUCTS_REQUEST: \r\n            return {\r\n                loading: true,\r\n                products: []\r\n            }\r\n\r\n        case ALL_PRODUCTS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                productsCount: action.payload.productsCount,\r\n                resPerPage: action.payload.resPerPage,\r\n                filteredProductsCount: action.payload.filteredProductsCount\r\n            }\r\n        case ADMIN_PRODUCTS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload\r\n            }\r\n\r\n        \r\n\r\n        case ALL_PRODUCTS_FAIL:\r\n        case ADMIN_PRODUCTS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const newProductReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n\r\n        case NEW_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case NEW_PRODUCT_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: action.payload.success,\r\n                product: action.payload.product\r\n            }\r\n\r\n        case NEW_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case NEW_PRODUCT_RESET:\r\n            return {\r\n                ...state,\r\n                success: false\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case DELETE_PRODUCT_REQUEST:\r\n        case UPDATE_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case DELETE_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isDeleted: action.payload\r\n            }\r\n        \r\n        case UPDATE_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isUpdated: action.payload\r\n            }\r\n\r\n        case DELETE_PRODUCT_FAIL:\r\n        case UPDATE_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case DELETE_PRODUCT_RESET:\r\n            return {\r\n                ...state,\r\n                isDeleted: false\r\n            }\r\n        \r\n        case UPDATE_PRODUCT_RESET:\r\n            return {\r\n                ...state,\r\n                isUpdated: false\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDetailsReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        \r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                product: action.payload\r\n            }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n         case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }   \r\n}\r\n\r\nexport const newReviewReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case NEW_REVIEW_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case NEW_REVIEW_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: action.payload\r\n            }\r\n\r\n        case NEW_REVIEW_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case NEW_REVIEW_RESET:\r\n            return {\r\n                ...state,\r\n                success: false\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewsReducer = (state = { review: [] }, action) => {\r\n    switch (action.type) {\r\n\r\n        case GET_REVIEWS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case GET_REVIEWS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                reviews: action.payload\r\n            }\r\n\r\n        case GET_REVIEWS_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const reviewReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case DELETE_REVIEW_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case DELETE_REVIEW_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isDeleted: action.payload\r\n            }\r\n\r\n        case DELETE_REVIEW_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case DELETE_REVIEW_RESET:\r\n            return {\r\n                ...state,\r\n                isDeleted: false\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { DELETE_ORDER_RESET } from '../constants/orderConstants'\r\nimport {\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    REGISTER_USER_REQUEST,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAIL,\r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n    LOAD_USER_FAIL,\r\n    UPDATE_PASSWORD_REQUEST,\r\n    UPDATE_PASSWORD_SUCCESS,\r\n    UPDATE_PASSWORD_RESET,\r\n    UPDATE_PASSWORD_FAIL,\r\n    UPDATE_PROFILE_REQUEST,\r\n    UPDATE_PROFILE_SUCCESS,\r\n    UPDATE_PROFILE_RESET,\r\n    UPDATE_PROFILE_FAIL,\r\n    FORGOT_PASSWORD_REQUEST,\r\n    FORGOT_PASSWORD_SUCCESS,\r\n    FORGOT_PASSWORD_FAIL,\r\n    NEW_PASSWORD_REQUEST,\r\n    NEW_PASSWORD_SUCCESS,\r\n    NEW_PASSWORD_FAIL,\r\n    ALL_USERS_REQUEST,\r\n    ALL_USERS_SUCCESS,\r\n    ALL_USERS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    UPDATE_USER_REQUEST,\r\n    UPDATE_USER_SUCCESS,\r\n    UPDATE_USER_RESET,\r\n    UPDATE_USER_FAIL,\r\n    DELETE_USER_REQUEST ,\r\n    DELETE_USER_SUCCESS,\r\n    DELETE_USER_RESET,\r\n    DELETE_USER_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAIL,\r\n\r\n\r\n     CLEAR_ERRORS\r\n\r\n} from '../constants/userConstants'\r\n\r\nexport const authReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n\r\n        case LOGIN_REQUEST:\r\n        case REGISTER_USER_REQUEST:\r\n        case LOAD_USER_REQUEST:\r\n            return {\r\n                loading: true,\r\n                isAuthenticated: false,\r\n            }\r\n\r\n        case LOGIN_SUCCESS:\r\n        case REGISTER_USER_SUCCESS:\r\n        case LOAD_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isAuthenticated: true,\r\n                user: action.payload\r\n            }\r\n\r\n        case LOGOUT_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                isAuthenticated: false,\r\n                user: null\r\n            }\r\n\r\n        case LOAD_USER_FAIL:\r\n            return {\r\n                loading: false,\r\n                isAuthenticated: false,\r\n                user: null,\r\n                error: action.payload\r\n            }\r\n\r\n        case LOGOUT_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case LOGIN_FAIL:\r\n        case REGISTER_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isAuthenticated: false,\r\n                user: null,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const userReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case UPDATE_PROFILE_REQUEST:\r\n        case UPDATE_PASSWORD_REQUEST:\r\n        case UPDATE_USER_REQUEST:\r\n        case DELETE_USER_REQUEST:     \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case UPDATE_PROFILE_SUCCESS:\r\n        case UPDATE_PASSWORD_SUCCESS:\r\n        case UPDATE_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isUpdated: action.payload\r\n            }\r\n        \r\n        case DELETE_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                idDeleted: action.payload\r\n            }\r\n        \r\n        case UPDATE_PROFILE_RESET:\r\n        case UPDATE_PASSWORD_RESET:\r\n        case UPDATE_USER_RESET:\r\n            return {\r\n                ...state,\r\n                isUpdated: false\r\n            }\r\n        \r\n        case DELETE_USER_RESET:\r\n            return {\r\n                ...state,\r\n                isDeleted: false\r\n            }\r\n\r\n        case UPDATE_PROFILE_FAIL:\r\n        case UPDATE_PASSWORD_FAIL:\r\n        case UPDATE_USER_FAIL:\r\n        case DELETE_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const forgotPasswordReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case FORGOT_PASSWORD_REQUEST:\r\n        case NEW_PASSWORD_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null\r\n            }\r\n\r\n        case FORGOT_PASSWORD_SUCCESS:\r\n    \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: action.payload\r\n            }\r\n\r\n        case NEW_PASSWORD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                success: action.payload\r\n            }\r\n        \r\n        case FORGOT_PASSWORD_FAIL:\r\n        case NEW_PASSWORD_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const allUsersReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n\r\n        case ALL_USERS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n\r\n        case ALL_USERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                users: action.payload\r\n            }\r\n\r\n        case ALL_USERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n\r\n        case USER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                user: action.payload\r\n            }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","\r\nimport { ADD_TO_CART, REMOVE_ITEM_CART, SAVE_SHIPPING_INFO } from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingInfo: {} }, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_TO_CART:\r\n            const item = action.payload;\r\n\r\n            const isItemExist = state.cartItems.find(i => i.product === item.product)\r\n\r\n            if (isItemExist) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(i => i.product === isItemExist.product ? item : i)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case REMOVE_ITEM_CART:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(i => i.product !== action.payload)\r\n            }\r\n\r\n\r\n        case SAVE_SHIPPING_INFO:\r\n            return {\r\n                ...state,\r\n                shippingInfo: action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    CREATE_ORDER_REQUEST,\r\n    CREATE_ORDER_SUCCESS,\r\n    CREATE_ORDER_FAIL,\r\n    MY_ORDERS_REQUEST,\r\n    MY_ORDERS_SUCCESS,\r\n    MY_ORDERS_FAIL,\r\n    ALL_ORDERS_REQUEST,\r\n    ALL_ORDERS_SUCCESS,\r\n    ALL_ORDERS_FAIL,\r\n    UPDATE_ORDER_REQUEST,\r\n    UPDATE_ORDER_SUCCESS,\r\n    UPDATE_ORDER_RESET,\r\n    UPDATE_ORDER_FAIL,\r\n    DELETE_ORDER_REQUEST,\r\n    DELETE_ORDER_SUCCESS,\r\n    DELETE_ORDER_RESET,\r\n    DELETE_ORDER_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    CLEAR_ERRORS\r\n} from '../constants/orderConstants'\r\n\r\nexport const newOrderReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case CREATE_ORDER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case CREATE_ORDER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case CREATE_ORDER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const myOrdersReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n\r\n        case MY_ORDERS_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case MY_ORDERS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case MY_ORDERS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = { order: {} }, action) => {\r\n    switch (action.type) {\r\n\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const allOrdersReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n\r\n        case ALL_ORDERS_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ALL_ORDERS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload.orders,\r\n                totalAmount: action.payload.totalAmount\r\n            }\r\n\r\n        case ALL_ORDERS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const orderReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case UPDATE_ORDER_REQUEST:\r\n        case DELETE_ORDER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case UPDATE_ORDER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isUpdated: action.payload\r\n            }\r\n        \r\n        case DELETE_ORDER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isDeleted: action.payload\r\n            }\r\n\r\n        case UPDATE_ORDER_FAIL:\r\n        case DELETE_ORDER_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case UPDATE_ORDER_RESET:\r\n            return {\r\n                ...state,\r\n                isUpdated: false\r\n            }\r\n\r\n        case DELETE_ORDER_RESET:\r\n            return {\r\n                ...state,\r\n                isDeleted: false\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import { useEffect, useState } from 'react'\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Footer from \"./components/layout/Footer\";\nimport Header from \"./components/layout/Header\";\n\n\nimport Home from \"./components/Home\";\nimport SearchPage from './components/SearchPage';\nimport ProductDetails from './product/ProductDetails';\n\n// Cart imports\nimport Cart from './components/cart/Cart';\nimport Shipping from './components/cart/Shipping';\nimport ConfirmOrder from './components/cart/ConfirmOrder';\nimport Payment from './components/cart/Payment';\nimport OrderSuccess from './components/cart/OrderSuccess'\n\n// Order imports\nimport ListOrders from './components/Order/ListOrders'\nimport OrderDetails from './components/Order/OrderDetails'\n\n// Auth or User imports\nimport Login from './components/user/Login';\nimport Register from './components/user/Register';\nimport Profile from './components/user/Profile';\nimport UpdateProfile from './components/user/UpdateProfile';\nimport UpdatePassword from './components/user/UpdatePassword';\nimport ForgotPassword from './components/user/ForgotPassword';\nimport NewPassword from './components/user/NewPassword';\n\n// Admin imports \nimport Dashboard from './components/admin/Dashboard';\nimport ProductsList from './components/admin/ProductsList';\nimport NewProduct from './components/admin/NewProduct';\nimport UpdateProduct from './components/admin/UpdateProduct';\nimport OrdersList from './components/admin/OrdersList';\nimport ProcessOrder from './components/admin/ProcessOrder';\nimport UsersList from './components/admin/UsersList';\nimport UpdateUser from './components/admin/UpdateUser';\nimport ProductReviews from './components/admin/ProductReviews';\n\n\nimport ProtectedRoute from './components/route/ProtectedRoute';\nimport { loadUser } from './actions/userActions';\nimport { useSelector } from 'react-redux';\nimport store from './store';\nimport axios from 'axios';\n\n// Payment\nimport { Elements } from '@stripe/react-stripe-js'\nimport { loadStripe } from '@stripe/stripe-js'\n\n\n\nfunction App() {\n\n  const [stripeApiKey, setStripeApiKey] = useState('');\n\n  useEffect(() => {\n    store.dispatch(loadUser())\n\n    async function getStripApiKey() {\n      const { data } = await axios.get('/api/v1/stripeapi');\n\n      setStripeApiKey(data.stripeApiKey)\n    }\n\n    getStripApiKey();\n\n  }, [])\n\n  const { user, loading } = useSelector(state => state.auth)\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n           \n          <div className=\"cotainer container-fluid\">\n            <Route path=\"/\" component={Home} exact />\n            <Route path=\"/search/:keyword\" component = {SearchPage}  />\n            <Route path=\"/product/:id\" component={ProductDetails} exact />\n          \n            <Route path=\"/Cart\" component={Cart} exact />\n            <ProtectedRoute path=\"/shipping\" component={Shipping} />\n            <ProtectedRoute path=\"/order/confirm\" component={ConfirmOrder} />\n            <ProtectedRoute path=\"/success\" component={OrderSuccess} />\n          \n          {stripeApiKey &&\n            <Elements stripe={loadStripe(stripeApiKey)}>\n              <ProtectedRoute path=\"/payment\" component={Payment} />\n            </Elements>\n          }\n\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/register\" component={Register} />\n          \n            <Route path=\"/password/forgot\" component={ForgotPassword} exact />\n            <Route path=\"/password/reset/:token\" component={NewPassword} exact />\n           \n            <ProtectedRoute path=\"/me\" component={Profile} exact />\n            <ProtectedRoute path=\"/me/update\" component={UpdateProfile} exact />\n          \n            <ProtectedRoute path=\"/password/update\" component={UpdatePassword} exact />\n            <Route path=\"/orders/me\" component={ListOrders} exact />\n            <Route path=\"/order/:id\" component={OrderDetails} exact />\n         </div>\n        <ProtectedRoute path=\"/dashboard\" isAdmin={true} component={Dashboard} exact />\n        <ProtectedRoute path=\"/admin/products\" isAdmin={true} component={ProductsList} exact />\n        <ProtectedRoute path=\"/admin/product\" isAdmin={true} component={NewProduct} exact />\n        <ProtectedRoute path=\"/admin/product/:id\" isAdmin={true} component={UpdateProduct} exact />\n        <ProtectedRoute path=\"/admin/orders\" isAdmin={true} component={OrdersList} exact />\n        <ProtectedRoute path=\"/admin/order/:id\" isAdmin={true} component={ProcessOrder} exact />\n        <ProtectedRoute path=\"/admin/users\" isAdmin={true} component={UsersList} exact />\n        <ProtectedRoute path=\"/admin/user/:id\" isAdmin={true} component={UpdateUser} exact />\n        <ProtectedRoute path=\"/admin/reviews\" isAdmin={true} component={ProductReviews} exact />\n        \n        \n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}